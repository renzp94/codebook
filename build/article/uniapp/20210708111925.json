{"title":"Uniapp极光推送常用方法封装","slug":"uniapp jpush","time":"2021-07-07T10:14:43.000Z","author":"renzp94","status":"done","html":"<p>常用方法封装是针对<code>Uniapp</code>插件市场中的极光官方的两个插件：<code>极光JPush官方SDK</code>、<code>极光JCore官方SDK</code>，关于安装请参考<a href=\"https://codebook.vercel.app/article/uniapp/20210707101348\">Uniapp 对接极光推送</a></p>\n<p><code>jpush.js</code></p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { isDev, isIos, isAndroid } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./tools&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> store <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@/store&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> storage, { MESSAGE_TOTAL, USER_INFO, CLOSE_NOTIFICATION_TIPS } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./storage&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { goMessages } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@/utils/pageHelper&#x27;</span>;\n\n<span class=\"hljs-comment\">// 不在App内提醒</span>\n<span class=\"hljs-keyword\">const</span> unAppToast = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-comment\">// #ifndef APP-PLUS</span>\n    isDev &amp;&amp;\n        uni.showToast({\n            <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;极光推送仅限APP内使用&#x27;</span>,\n            <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\">&#x27;none&#x27;</span>\n        });\n    <span class=\"hljs-comment\">// #endif</span>\n};\n<span class=\"hljs-comment\">// 初始化极光推送</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> jpushInit = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-comment\">// #ifdef APP-PLUS</span>\n    <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n    jv.initJPushService();\n    jv.addConnectEventListener(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (result.connectEnable) {\n            isDev &amp;&amp; <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;连接极光推送成功&#x27;</span>);\n            <span class=\"hljs-keyword\">const</span> userinfo = storage.get(USER_INFO);\n            <span class=\"hljs-keyword\">if</span> (userinfo) {\n                <span class=\"hljs-keyword\">let</span> total = <span class=\"hljs-number\">0</span>;\n                <span class=\"hljs-keyword\">if</span> (isIos) {\n                    <span class=\"hljs-keyword\">const</span> app = plus.ios.import(<span class=\"hljs-string\">&#x27;UIApplication&#x27;</span>).sharedApplication();\n                    total = app.applicationIconBadgeNumber();\n                }\n\n                <span class=\"hljs-keyword\">if</span> (total === <span class=\"hljs-number\">0</span>) {\n                    <span class=\"hljs-keyword\">let</span> total = storage.get(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${MESSAGE_TOTAL}</span>_<span class=\"hljs-subst\">${userinfo.id}</span>`</span>);\n                    total = total ? total : <span class=\"hljs-number\">0</span>;\n                }\n                +store.commit(<span class=\"hljs-string\">&#x27;updateMessageTotal&#x27;</span>, total);\n                storage.set(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${MESSAGE_TOTAL}</span>_<span class=\"hljs-subst\">${userinfo.id}</span>`</span>, total);\n            }\n        }\n    });\n    <span class=\"hljs-keyword\">const</span> closeNotificationTips = storage.get(CLOSE_NOTIFICATION_TIPS);\n    <span class=\"hljs-keyword\">if</span> (!closeNotificationTips) {\n        getNotificationAuthorization();\n    }\n    onNotification();\n    <span class=\"hljs-comment\">// #endif</span>\n    unAppToast();\n};\n<span class=\"hljs-comment\">// 监听消息推送</span>\n<span class=\"hljs-keyword\">const</span> onNotification = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n    jv.addNotificationListener(<span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> { badge, notificationEventType } = data;\n        <span class=\"hljs-comment\">// 收到新消息</span>\n        <span class=\"hljs-keyword\">if</span> (notificationEventType === <span class=\"hljs-string\">&#x27;notificationArrived&#x27;</span>) {\n            setBadge(badge);\n        }\n        <span class=\"hljs-comment\">// 点击打开消息</span>\n        <span class=\"hljs-keyword\">if</span> (notificationEventType === <span class=\"hljs-string\">&#x27;notificationOpened&#x27;</span>) {\n            <span class=\"hljs-keyword\">if</span> (store.state.isLaunch) {\n                goMessages();\n            } <span class=\"hljs-keyword\">else</span> {\n                store.commit(<span class=\"hljs-string\">&#x27;updateIsGoMessage&#x27;</span>, <span class=\"hljs-literal\">true</span>);\n            }\n        }\n    });\n};\n<span class=\"hljs-comment\">// 查询是否有通知权限</span>\n<span class=\"hljs-keyword\">const</span> getNotificationAuthorization = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n    <span class=\"hljs-keyword\">if</span> (isAndroid) {\n        jv.isNotificationEnabled(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ code }</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">if</span> (code === <span class=\"hljs-number\">0</span>) {\n                goNotificationSettings();\n            }\n        });\n    }\n};\n<span class=\"hljs-comment\">// 跳转消息通知设置界面</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> goNotificationSettings = <span class=\"hljs-function\">() =&gt;</span> {\n    uni.showModal({\n        <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;检测到您未打开消息通知，开启后第一时间可收到消息推送&#x27;</span>,\n        <span class=\"hljs-attr\">cancelText</span>: <span class=\"hljs-string\">&#x27;稍后开启&#x27;</span>,\n        <span class=\"hljs-attr\">confirmText</span>: <span class=\"hljs-string\">&#x27;去开启&#x27;</span>,\n        <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{\n            storage.set(CLOSE_NOTIFICATION_TIPS, <span class=\"hljs-literal\">true</span>);\n            <span class=\"hljs-keyword\">if</span> (res.confirm) {\n                <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n                jv.openSettingsForNotification();\n            }\n        }\n    });\n};\n<span class=\"hljs-comment\">// 设置应用消息量角标</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> setBadge = <span class=\"hljs-function\">(<span class=\"hljs-params\">badge, isSyncData = <span class=\"hljs-literal\">true</span></span>) =&gt;</span> {\n    <span class=\"hljs-comment\">// #ifdef APP-PLUS</span>\n    plus.runtime.setBadgeNumber(badge);\n    <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n    jv.setBadge(badge);\n    <span class=\"hljs-keyword\">if</span> (isSyncData) {\n        <span class=\"hljs-keyword\">const</span> userinfo = storage.get(USER_INFO);\n        storage.set(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${MESSAGE_TOTAL}</span>_<span class=\"hljs-subst\">${userinfo?.id}</span>`</span>, badge);\n        store.commit(<span class=\"hljs-string\">&#x27;updateMessageTotal&#x27;</span>, badge);\n    }\n    <span class=\"hljs-comment\">// #endif</span>\n    unAppToast();\n};\n<span class=\"hljs-comment\">// 设置别名</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> setAlias = <span class=\"hljs-function\">(<span class=\"hljs-params\">alias</span>) =&gt;</span> {\n    <span class=\"hljs-comment\">// #ifdef APP-PLUS</span>\n    <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;alias&#x27;</span>, alias);\n    jv.setAlias({ alias });\n    <span class=\"hljs-comment\">// #endif</span>\n    unAppToast();\n};\n<span class=\"hljs-comment\">// 删除别名</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> removeAlias = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-comment\">// #ifdef APP-PLUS</span>\n    <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n    jv.deleteAlias({});\n    <span class=\"hljs-comment\">// #endif</span>\n    unAppToast();\n};\n</code></pre>\n"}