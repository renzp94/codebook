{"title":"Uniapp对接极光推送","slug":"uniapp jpush","time":"2021-07-07T10:14:43.000Z","author":"renzp94","status":"done","html":"<h2 id=\"准备工作\">准备工作</h2>\n<h3 id=\"极光应用\">极光应用</h3>\n<p>去<a href=\"https://www.jiguang.cn/\">极光官网</a>注册账号，然后创建一个应用，服务选择<code>消息推送</code>，在产品设置时填写的<code>应用包名</code>需要和开发的 App 包名一致，然后点击下一步就可以了，SDK 不需要下载。</p>\n<br />\n\n<p>打开应用设置，找到<code>高级设置→推送设置</code>，如果需要精准推送的话，可以在<code>Android</code>选项设置对应厂商的信息，<code>IOS</code>设置需要证书</p>\n<h4 id=\"生成-ios-推送证书\">生成 IOS 推送证书</h4>\n<p>如果之前在生成<code>IOS</code>描述文件时没有选择<code>Push Notifications(推送服务)</code>，则需要开启推送服务</p>\n<h5 id=\"开启推送服务\">开启推送服务</h5>\n<ul>\n<li>登录账号，选择<code>Certificates, Identifiers &amp; Profiles</code></li>\n<li>进入之后，在左侧菜单上点击<code>Identifiers</code>，点击进入对应的 App</li>\n<li>在<code>Capabilities</code>栏中找到<code>Push Notifications</code>勾选上，此时右侧会出现<code>Config</code>，点击进入</li>\n<li>分别创建<code>开发推送证书</code>和<code>正式推送证书</code>，创建时选择<code>.certSigningRequest</code>文件，然后点击<code>Continue</code>即可，最后下载下来</li>\n<li>如果之前生成描述文件时没有开启<code>推送服务</code>，则开启之后需要点击编辑，然后点击保存，最后将新的描述文件重新下载下来，替换旧的描述文件</li>\n</ul>\n<p>证书生成之后在<code>IOS</code>设置处上传证书保存即可。</p>\n<h2 id=\"安装-uniapp-极光推送插件\">安装 Uniapp 极光推送插件</h2>\n<ul>\n<li>在插件市场搜索极光推送，然后将作者是<code>极光</code>的两个插件：<code>极光JPush官方SDK</code>、<code>极光JCore官方SDK</code>购买即可(免费)</li>\n<li>然后在<code>HBuilder</code>中双击<code>manifest.json</code>文件，选择<code>App原生插件配置</code>，点击<code>选择云端插件</code>，然后将两个插件选中确定即可</li>\n</ul>\n<blockquote>\n<p>注意：一个账号下的应用包名只能安装一个插件，所以在市场购买插件时指定应用包名需要注意一下，否则会出现添加了插件但运行自定义基座时报找不到插件</p>\n</blockquote>\n<h2 id=\"配置极光推送\">配置极光推送</h2>\n<p>在<code>JCore</code>插件配置所需信息</p>\n<ul>\n<li><code>JPUSH_APPKEY_ANDROID</code>：(Android)用于统计分发渠道，可填默认值<code>developer-default</code></li>\n<li><code>JPUSH_APPKEY_IOS</code>：(IOS)用于统计分发渠道，可填默认值<code>developer-default</code></li>\n<li><code>JPUSH_APPKEY_IOS</code>：(IOS)极光应用的<code>appkey</code></li>\n<li><code>JPUSH_APPKEY_ANDROID</code>：(Android)极光应用的<code>appkey</code></li>\n</ul>\n<h2 id=\"使用极光推送\">使用极光推送</h2>\n<p>在<code>App.vue</code>中注册极光推送</p>\n<pre><code class=\"language-vue\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-function\"><span class=\"hljs-title\">onLaunch</span>(<span class=\"hljs-params\"></span>)</span> {\n        <span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\n        jv.initJPushService();\n        jv.addConnectEventListener(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">if</span> (result.connectEnable) {\n                <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;连接极光推送成功&#x27;</span>);\n            }\n        });\n    }\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<blockquote>\n<p>如果没有连接成功，可先尝试设置一下别名，然后再试试设置别名用<code>setAlias({alias:&#39;xx&#39;}})</code>，注意设置别名时别名是字符串</p>\n</blockquote>\n<h2 id=\"测试消息推送\">测试消息推送</h2>\n<p>在极光应用运营平台中选择<code>消息推送→推送管理→创建推送</code>，选择目标平台，这里使用<code>IOS开发环境</code>，输入通知标题和内容，选择目标人群<code>广播所有人</code>，点击发送预览，若出现<code>错误:没有满足条件的推送目标或推送目标超过 255 天不活跃，被排除在推送目标之外</code>则说明没有注册成功，检查一下配置是否有误，或者使用<code>设备别名</code>并在代码中注册别名尝试一下</p>\n<h2 id=\"极光推送方法\">极光推送方法</h2>\n<h3 id=\"initjpushservice\">initJPushService</h3>\n<blockquote>\n<p>初始化服务，使用极光推送前需要使用此方法初始化服务，一般在应用启动时注册：<code>App.vue</code>中的<code>onLaunch</code></p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.initJPushService();\n</code></pre>\n<h3 id=\"addconnecteventlistener\">addConnectEventListener</h3>\n<blockquote>\n<p>监听连接状态，返回结果中的<code>connectEnable</code>为<code>true</code>则说明连接成功</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.addConnectEventListener(<span class=\"hljs-function\"><span class=\"hljs-params\">(result)</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (result.connectEnable) {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;连接极光推送成功&#x27;</span>);\n    }\n});\n</code></pre>\n<h3 id=\"setalias\">setAlias</h3>\n<blockquote>\n<p>注册设备别名，接受一个对象</p>\n</blockquote>\n<ul>\n<li><code>alias</code>：别名,注意：别名只能是字符串</li>\n<li><code>sequence</code>：序列，可不填</li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.setAlias({ <span class=\"hljs-keyword\">alias</span>: <span class=\"hljs-string\">&#x27;testAlias&#x27;</span> });\n</code></pre>\n<h3 id=\"queryalias\">queryAlias</h3>\n<blockquote>\n<p>查询别名，可接受一个对象</p>\n</blockquote>\n<ul>\n<li><code>sequence</code>：序列，可不填</li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.queryAlias();\n</code></pre>\n<h3 id=\"deletealias\">deleteAlias</h3>\n<blockquote>\n<p>删除别名，可接受一个对象</p>\n</blockquote>\n<ul>\n<li><code>sequence</code>：序列，可不填</li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.deleteAlias();\n</code></pre>\n<h3 id=\"addtags\">addTags</h3>\n<blockquote>\n<p>添加设备标签，接受一个对象</p>\n</blockquote>\n<ul>\n<li><code>tags</code>：设备标签数组</li>\n<li><code>sequence</code>：序列，可不填</li>\n</ul>\n<pre><code class=\"language-js\">const jv = uni.require<span class=\"hljs-constructor\">NativePlugin(&#x27;JG-JPush&#x27;)</span>;\njv.add<span class=\"hljs-constructor\">Tags({ <span class=\"hljs-params\">tags</span>: <span class=\"hljs-params\">tags</span> })</span>;\n</code></pre>\n<h3 id=\"querytag\">queryTag</h3>\n<blockquote>\n<p>验证设备标签，可接受一个对象</p>\n</blockquote>\n<ul>\n<li><code>sequence</code>：序列，可不填</li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.queryTag();\n</code></pre>\n<h3 id=\"getalltags\">getAllTags</h3>\n<blockquote>\n<p>查询所有标签</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.getAllTags();\n</code></pre>\n<h3 id=\"updatetags\">updateTags</h3>\n<blockquote>\n<p>覆盖设备标签，接受参数同<code>addTags</code></p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.require<span class=\"hljs-constructor\">NativePlugin(&#x27;JG-JPush&#x27;)</span>;\njv.update<span class=\"hljs-constructor\">Tags({ <span class=\"hljs-params\">tags</span>: <span class=\"hljs-params\">tags</span> })</span>;\n</code></pre>\n<h3 id=\"deletetags\">deleteTags</h3>\n<blockquote>\n<p>删除设备标签，接受参数同<code>addTags</code></p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.require<span class=\"hljs-constructor\">NativePlugin(&#x27;JG-JPush&#x27;)</span>;\njv.delete<span class=\"hljs-constructor\">Tags({ <span class=\"hljs-params\">tags</span>: <span class=\"hljs-params\">tags</span> })</span>;\n</code></pre>\n<h3 id=\"cleantags\">cleanTags</h3>\n<blockquote>\n<p>清空设备标签，可接受一个对象</p>\n</blockquote>\n<ul>\n<li><code>sequence</code>：序列，可不填</li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>)\njv.cleanTags)\n</code></pre>\n<h3 id=\"setbadge\">setBadge</h3>\n<blockquote>\n<p>设置角标，即应用图标左上角数量，注意这个只是设置极光推送服务的角标，一般应用会根据推送中的<code>badge</code>自动设置应用角标，如果需要手动设置应用的角标需要使用<code>plus.runtime.setBadgeNumber(badge)</code>，如果需要清空角标可使用<code>plus.runtime.setBadgeNumber(0)</code>来清空，0 表示清空</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.setBadge(<span class=\"hljs-number\">1</span>);\n<span class=\"hljs-keyword\">plus</span>.<span class=\"hljs-keyword\">runtime</span>.setBadgeNumber(<span class=\"hljs-number\">1</span>);\n</code></pre>\n<h3 id=\"setmobilenumber\">setMobileNumber</h3>\n<blockquote>\n<p>设置电话号码</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.require<span class=\"hljs-constructor\">NativePlugin(&#x27;JG-JPush&#x27;)</span>;\njv.set<span class=\"hljs-constructor\">MobileNumber({ <span class=\"hljs-params\">mobileNumber</span>: 13011112222 })</span>;\n</code></pre>\n<h3 id=\"locationservicesenabled\">locationServicesEnabled</h3>\n<blockquote>\n<p>获取位置是否可用</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.locationServicesEnabled();\n</code></pre>\n<h3 id=\"getlocationauthorizationstatus\">getLocationAuthorizationStatus</h3>\n<blockquote>\n<p>获取位置权限</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.getLocationAuthorizationStatus();\n</code></pre>\n<h3 id=\"requestlocationauthorization\">requestLocationAuthorization</h3>\n<blockquote>\n<p>向用于申请定位权限</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.requireNativePlug<span class=\"hljs-meta\">in(</span><span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.requestLocationAuthorizati<span class=\"hljs-meta\">on(</span>);\n</code></pre>\n<h3 id=\"setlocationeanable\">setLocationEanable</h3>\n<blockquote>\n<p>设置位置是否可用</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.setLocationEanable(<span class=\"hljs-literal\">true</span>);\n</code></pre>\n<h3 id=\"setlocation\">setLocation</h3>\n<blockquote>\n<p>设置位置</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-attribute\">const</span> jv = uni.requireNativePlugin(&#x27;JG-JPush&#x27;);\n<span class=\"hljs-attribute\">jv</span>.setLocation({ latitude: <span class=\"hljs-number\">23</span>.<span class=\"hljs-number\">23</span>, longitude: <span class=\"hljs-number\">23</span>.<span class=\"hljs-number\">23</span> });\n</code></pre>\n<h3 id=\"setloggerenable\">setLoggerEnable</h3>\n<blockquote>\n<p>设置日志是否打开</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.setLoggerEnable(<span class=\"hljs-literal\">true</span>);\n</code></pre>\n<h3 id=\"isnotificationenabledandroidrequestnotificationauthorizationios\">isNotificationEnabled(Android)/requestNotificationAuthorization(Ios)</h3>\n<blockquote>\n<p>是否有消息通知权限</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.isNotificationEnabled(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ code }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (code === <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;您还没有打开通知权限&#x27;</span>);\n    }\n});\njv.requestNotificationAuthorization(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ status }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (status &lt; <span class=\"hljs-number\">2</span>) {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;您还没有打开通知权限&#x27;</span>);\n    }\n});\n</code></pre>\n<h3 id=\"opensettingsfornotification\">openSettingsForNotification</h3>\n<blockquote>\n<p>跳转当前应用消息通知设置界面</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.require<span class=\"hljs-constructor\">NativePlugin(&#x27;JG-JPush&#x27;)</span>;\njv.<span class=\"hljs-keyword\">open</span><span class=\"hljs-constructor\">SettingsForNotification()</span>;\n</code></pre>\n<h3 id=\"getregistrationid\">getRegistrationID</h3>\n<blockquote>\n<p>获取注册 ID，需要连接成功之后获取，否则程序会崩溃</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.getRegistrationID(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ registerID }</span>) =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(registerID);\n});\n</code></pre>\n<h3 id=\"setmaxgeofencenumber\">setMaxGeofenceNumber</h3>\n<blockquote>\n<p>设置位置围栏的最大半径，位置围栏是只在某一范围内可推送</p>\n</blockquote>\n<h3 id=\"addgeofencelistener\">addGeofenceListener</h3>\n<blockquote>\n<p>监听位置围栏触发</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.addGeofenceListener(<span class=\"hljs-function\"><span class=\"hljs-params\">(result)</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(result);\n});\n</code></pre>\n<h3 id=\"deletegeofence\">deleteGeofence</h3>\n<blockquote>\n<p>删除位置围栏</p>\n</blockquote>\n<h3 id=\"addlocalnotification\">addLocalNotification</h3>\n<blockquote>\n<p>创建本地消息通知</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.requireNativePlug<span class=\"hljs-meta\">in(</span><span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.addLocalNotificati<span class=\"hljs-meta\">on(</span>{\n    messageID: <span class=\"hljs-string\">&#x27;123&#x27;</span>,\n    <span class=\"hljs-meta\">title</span>: <span class=\"hljs-string\">&#x27;title&#x27;</span>,\n    content: <span class=\"hljs-string\">&#x27;content&#x27;</span>,\n    extras: {\n        name: <span class=\"hljs-string\">&#x27;Cindy&#x27;</span>,\n        age: <span class=\"hljs-string\">&#x27;16&#x27;</span>\n    }\n});\n</code></pre>\n<h3 id=\"removelocalnotification\">removeLocalNotification</h3>\n<blockquote>\n<p>删除本地消息通知</p>\n</blockquote>\n<pre><code class=\"language-js\">const jv = uni.requireNativePlug<span class=\"hljs-meta\">in(</span><span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.removeLocalNotificati<span class=\"hljs-meta\">on(</span>{ messageID: <span class=\"hljs-string\">&#x27;123&#x27;</span> });\n</code></pre>\n<h3 id=\"clearlocalnotifications\">clearLocalNotifications</h3>\n<blockquote>\n<p>清空本地消息通知</p>\n</blockquote>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> jv = uni.requireNativePlugin(<span class=\"hljs-string\">&#x27;JG-JPush&#x27;</span>);\njv.clearLocalNotifications();\n</code></pre>\n<h3 id=\"addnotificationlistener\">addNotificationListener</h3>\n<blockquote>\n<p>监听消息事件，接受一个回调函数，回调函数的参数是推送的消息内容</p>\n</blockquote>\n<pre><code class=\"language-json\">{\n    <span class=\"hljs-attr\">&quot;extras&quot;</span>: {},\n    <span class=\"hljs-attr\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;测试内容&quot;</span>,\n    <span class=\"hljs-attr\">&quot;badge&quot;</span>: <span class=\"hljs-string\">&quot;1&quot;</span>,\n    <span class=\"hljs-attr\">&quot;messageID&quot;</span>: <span class=\"hljs-number\">2252028010729666</span>,\n    <span class=\"hljs-attr\">&quot;notificationEventType&quot;</span>: <span class=\"hljs-string\">&quot;notificationOpened&quot;</span>,\n    <span class=\"hljs-attr\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;测试标题&quot;</span>,\n    <span class=\"hljs-attr\">&quot;ring&quot;</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n    <span class=\"hljs-attr\">&quot;iOS&quot;</span>: {\n        <span class=\"hljs-attr\">&quot;_j_business&quot;</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">&quot;_j_data_&quot;</span>: <span class=\"hljs-string\">&quot;{\\&quot;data_msgtype\\&quot;:1,\\&quot;push_type\\&quot;:4,\\&quot;is_vip\\&quot;:0}&quot;</span>,\n        <span class=\"hljs-attr\">&quot;_j_uid&quot;</span>: <span class=\"hljs-number\">53619607272</span>,\n        <span class=\"hljs-attr\">&quot;_j_msgid&quot;</span>: <span class=\"hljs-number\">2252028010729666</span>,\n        <span class=\"hljs-attr\">&quot;aps&quot;</span>: {\n            <span class=\"hljs-attr\">&quot;mutable-content&quot;</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">&quot;alert&quot;</span>: {\n                <span class=\"hljs-attr\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;测试标题&quot;</span>,\n                <span class=\"hljs-attr\">&quot;body&quot;</span>: <span class=\"hljs-string\">&quot;测试内容&quot;</span>\n            },\n            <span class=\"hljs-attr\">&quot;badge&quot;</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">&quot;sound&quot;</span>: <span class=\"hljs-string\">&quot;default&quot;</span>\n        }\n    }\n}\n</code></pre>\n<p>其中，<code>badge</code>是发送消息量，可以用于设置应用角标，<code>notificationEventType</code>为触发类型，值为<code>notificationArrived</code>表示新消息，值为<code>notificationOpened</code>表示打开某个消息，注意：<code>一般需要手动调用jv.setBadge(0)来清空badge，否则下次消息推送badge是累加</code></p>\n<br />\n\n<p>在<code>IOS</code>上杀死<code>APP</code>，可以收到消息通知，但无法触发<code>addNotificationListener</code>，所以如果<code>APP</code>内需要展示消息量需要在进入<code>APP</code>时获取应用角标，此时可以使用<code>plus.ios.import(&quot;UIApplication&quot;).sharedApplication().applicationIconBadgeNumber()</code>来获取，在<code>Android</code>上杀死<code>APP</code>将无法收到推送，所以不用考虑此情况</p>\n<h3 id=\"removealleventlisteners\">removeAllEventListeners</h3>\n<h3 id=\"addeventlistener\">addEventListener</h3>\n<h3 id=\"setisallowedinmessagepop\">setIsAllowedInMessagePop</h3>\n<h3 id=\"addlocalnotificationlistener\">addLocalNotificationListener</h3>\n<h3 id=\"addinmessagelistener\">addInMessageListener</h3>\n<h3 id=\"initvoipservice\">initVoipService</h3>\n<h3 id=\"addcustommessagelistener\">addCustomMessageListener</h3>\n<h3 id=\"addmobilenumberlistener\">addMobileNumberListener</h3>\n<h3 id=\"pullinmessage\">pullInMessage</h3>\n<h3 id=\"addvoippushincominglistener\">addVoipPushIncomingListener</h3>\n"}