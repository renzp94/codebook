{"title":"React Router","slug":"react router","time":"2021-08-07T12:11:35.000Z","author":"renzp94","status":"done","html":"<p>在<code>React</code>应用中常用的路由是<code>React Router</code>，<code>React Router</code>分两个库，用在网站中的库是<code>react-router-dom</code>，在<code>React Native</code>中用的库是<code>react-router-native</code>.还有一个是<code>react-router-config</code>，此库是用于通过配置生成路由</p>\n<h2 id=\"主要的组件\">主要的组件</h2>\n<h3 id=\"browserrouter\">BrowserRouter</h3>\n<blockquote>\n<p>使用<code>history</code>模式的路由器，即路由地址不带<code>#</code></p>\n</blockquote>\n<ul>\n<li><code>basename</code>：基础路径，所有路径前缀都默认加上此路径</li>\n<li><code>getUserConfirmation</code>：确认导航</li>\n<li><code>forceRefresh</code>：强制刷新浏览器，类型：<code>Boolean</code></li>\n</ul>\n<h3 id=\"hashrouer\">HashRouer</h3>\n<blockquote>\n<p>使用<code>hash</code>模式的路由器，路由地址上带<code>#</code></p>\n</blockquote>\n<p>属性同<code>BrowserRouter</code></p>\n<h3 id=\"route\">Route</h3>\n<blockquote>\n<p>路由匹配器，通过指定<code>path</code>属性指定路由，通过子组件来指定路由显示的内容</p>\n</blockquote>\n<p>路由渲染方式有三种：</p>\n<ul>\n<li><code>&lt;Route component&gt;</code>：通过<code>component</code>属性指定渲染的组件</li>\n<li><code>&lt;Route render&gt;</code>：通过<code>render</code>属性指定渲染的内容，接收一个函数，函数返回值为渲染内容</li>\n<li><code>Route children&gt;</code>：通过<code>children</code>属性或者用<code>Route</code>包裹组件指定渲染的内容，<code>chilren</code>属性接收一个函数，函数返回值为渲染内容</li>\n</ul>\n<p><code>Route</code>其他属性：</p>\n<ul>\n<li><code>path</code>：指定路由路径，动态属性可通过<code>:</code>来指定，如：<code>/user/:id</code></li>\n<li><code>exact</code>：精确匹配</li>\n<li><code>strict</code>：严格匹配</li>\n<li><code>sensitive</code>：区分大小写</li>\n</ul>\n<h3 id=\"switch\">Switch</h3>\n<blockquote>\n<p>匹配唯一路由，如果不使用<code>Switch</code>则会匹配所有满足的路由，当使用<code>Switch</code>时则从上到下一次匹配，匹配到则不继续匹配</p>\n</blockquote>\n<h3 id=\"link\">Link</h3>\n<blockquote>\n<p>导航，可通过<code>to</code>属性指定跳转地址，<code>to</code>属性可以是<code>string</code>(路由)，或者为一个对象或者函数(函数需要返回一个对象)，对象属性如下：</p>\n</blockquote>\n<ul>\n<li><code>pathname</code>：跳转地址</li>\n<li><code>search</code>：链接后的<code>search</code>字符串，类型是<code>string</code></li>\n<li><code>hash</code>：链接后的<code>hash</code>字符串，类型是<code>string</code>，需要手动加<code>#</code></li>\n<li><code>state</code>：状态</li>\n</ul>\n<p><code>Link</code>属性：</p>\n<ul>\n<li><code>replace</code>：替换路由，即指定的路由替换掉当前路由</li>\n<li><code>innerRef</code>：a 标签的<code>ref</code></li>\n<li><code>component</code>：指定路由显示的组件内容</li>\n</ul>\n<h3 id=\"navlink\">NavLink</h3>\n<blockquote>\n<p>导航，可通过<code>to</code>属性指定跳转地址，与<code>Link</code>不同的是当地址匹配到指定路由时，则会激活当前<code>NavLink</code>，通过<code>activeClassName</code>指定激活样式</p>\n</blockquote>\n<ul>\n<li><code>activeClassName</code>：路由激活时的<code>class</code></li>\n<li><code>activeStyle</code>：路由激活时的<code>style</code></li>\n<li><code>exact</code>：是否精准匹配</li>\n<li><code>strict</code>：是否严格匹配，即：路由字符串完全一致，如果不严格匹配，则当前后有<code>/</code>时一样可以匹配</li>\n<li><code>isActive</code>：确定链接是否处于激活状态的额外逻辑操作函数</li>\n</ul>\n<h3 id=\"redirect\">Redirect</h3>\n<blockquote>\n<p>重定向导航，通过 <code>to</code>属性制定重定向的地址，可为<code>string</code>或对象或函数(返回一个对象)，对象属性同<code>Link</code>的<code>to</code>属性指定</p>\n</blockquote>\n<p><code>Redirect</code>属性：</p>\n<ul>\n<li><code>push</code>：向历史记录中推入一条记录，而不是替换，类型：<code>Boolean</code></li>\n<li><code>from</code>：精准匹配，同<code>Rtoue.exact</code>，当<code>from</code>是当前路由时才可重定向</li>\n<li><code>strict</code>：严格匹配，用于指定<code>from</code>属性的严格匹配</li>\n<li><code>sensitive</code>：区分大小写，用于指定<code>from</code>属性区分大小写</li>\n</ul>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserRouter, Link, NavLink, Redirect, Route, Switch } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-dom&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> classes <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./app.module.css&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> Home = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">const</span> About = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>About<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BrowserRouter</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/about&quot;</span>&gt;</span>About<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">NavLink</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span> <span class=\"hljs-attr\">exact</span> <span class=\"hljs-attr\">activeClassName</span>=<span class=\"hljs-string\">{classes.active}</span>&gt;</span>\n                            NavLink-Home\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">NavLink</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">NavLink</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/about&quot;</span> <span class=\"hljs-attr\">activeClassName</span>=<span class=\"hljs-string\">{classes.active}</span>&gt;</span>\n                            NavLink-About\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">NavLink</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Switch</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">exact</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Home</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Route</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/home&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Redirect</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Route</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/about&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">About</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Route</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Switch</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BrowserRouter</span>&gt;</span></span>\n    );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> App;\n</code></pre>\n<p><code>app.module.css</code></p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-class\">.active</span> {\n    <span class=\"hljs-attribute\">color</span>: orange;\n    <span class=\"hljs-attribute\">font-weight</span>: <span class=\"hljs-number\">700</span>;\n}\n</code></pre>\n<h3 id=\"withrouter\">withRouter</h3>\n<blockquote>\n<p>通过<code>withRouter</code>将路由相关数据传递给组件，<code>withRouter</code>是一个高阶组件，传入的组件内部可通过<code>props</code>访问<code>match</code>、<code>location</code>、<code>history</code>对象</p>\n</blockquote>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> {\n    BrowserRouter,\n    Link,\n    NavLink,\n    Redirect,\n    Route,\n    Switch,\n    withRouter\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-dom&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> classes <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./app.module.css&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> Home = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">const</span> About = withRouter(<span class=\"hljs-function\">(<span class=\"hljs-params\">props: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> { match, location, history } = props;\n\n    <span class=\"hljs-built_in\">console</span>.log(match, location, history);\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>About<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n});\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BrowserRouter</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/about&quot;</span>&gt;</span>About<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Switch</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">exact</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Home</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Route</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/home&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Redirect</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Route</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/about&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">About</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Route</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Switch</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BrowserRouter</span>&gt;</span></span>\n    );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> App;\n</code></pre>\n<h2 id=\"hooks\">Hooks</h2>\n<blockquote>\n<p><code>react-router-dom</code>也提供了一些<code>Hooks</code>用于函数组件中</p>\n</blockquote>\n<h3 id=\"usehistory\">useHistory</h3>\n<blockquote>\n<p>获取<code>history</code>对象，一般用于编程式导航</p>\n</blockquote>\n<h3 id=\"uselocation\">useLocation</h3>\n<blockquote>\n<p>获取当前<code>URL</code>对象</p>\n</blockquote>\n<h3 id=\"useparams\">useParams</h3>\n<blockquote>\n<p>获取<code>URL</code>参数的键/值对对象</p>\n</blockquote>\n<h3 id=\"useroutematch\">useRouteMatch</h3>\n<blockquote>\n<p>用于匹配路由，匹配成功之后返回匹配到的路由信息，否则返回<code>null</code></p>\n</blockquote>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React, { useEffect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> {\n    BrowserRouter,\n    Redirect,\n    Route,\n    Switch,\n    useHistory,\n    useLocation,\n    useParams,\n    useRouteMatch\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-dom&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> Home = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">const</span> About = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>About<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">const</span> UserDetails = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> params = useParams&lt;{ <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span> }&gt;();\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>用户详情：{params.id}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">const</span> Laytout = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> history = useHistory();\n    <span class=\"hljs-keyword\">const</span> location = useLocation();\n    <span class=\"hljs-keyword\">const</span> match = useRouteMatch(<span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>);\n\n    useEffect(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(location);\n        <span class=\"hljs-built_in\">console</span>.log(match);\n    }, [location]);\n\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> history.push(&#x27;/&#x27;)}&gt;Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> history.push(&#x27;/about&#x27;)}&gt;About<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> history.push(&#x27;/user/1&#x27;)}&gt;用户1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> history.push(&#x27;/user/2&#x27;)}&gt;用户2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Switch</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">exact</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/&quot;</span> <span class=\"hljs-attr\">component</span>=<span class=\"hljs-string\">{Home}</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/about&quot;</span> <span class=\"hljs-attr\">component</span>=<span class=\"hljs-string\">{About}</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Route</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">&quot;/user/:id&quot;</span> <span class=\"hljs-attr\">component</span>=<span class=\"hljs-string\">{UserDetails}</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Switch</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n    );\n};\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BrowserRouter</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Laytout</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BrowserRouter</span>&gt;</span></span>\n    );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> App;\n</code></pre>\n<h2 id=\"react-router-config\">react-router-config</h2>\n<p><code>react-router-config</code>是<code>react-router</code>的辅助库，用于集中式配置路由，通过配置文件生成路由的一个库。提供两个方法：</p>\n<ul>\n<li><code>renderRoutes</code>：接收一个路由配置的数组，返回渲染的路由</li>\n<li><code>matchRoutes</code>：匹配路由，第一个参数传入路由配置数组，第二个参数传入要匹配的路由，返回匹配到的路由信息</li>\n</ul>\n<p><code>App.tsx</code></p>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React, { Suspense } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserRouter, Link, Switch } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-dom&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { renderRoutes } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-config&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> routes <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./routes&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Suspense</span> <span class=\"hljs-attr\">fallback</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">div</span>&gt;</span>loading...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>}&gt;\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BrowserRouter</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/login&quot;</span>&gt;</span>Login<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/user&quot;</span>&gt;</span>User<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n                {renderRoutes(routes)}\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BrowserRouter</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Suspense</span>&gt;</span></span>\n    );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> App;\n</code></pre>\n<blockquote>\n<p>因为需要将路由做懒加载处理，所以用了<code>Suspense</code>边界处理，懒加载路由可以使用<code>React.lazy</code></p>\n</blockquote>\n<p><code>routes/index.ts</code></p>\n<pre><code class=\"language-ts\"><span class=\"hljs-keyword\">import</span> { lazy } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { RouteConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-config&#x27;</span>;\n\nconst routes: <span class=\"hljs-built_in\">Array</span>&lt;RouteConfig&gt; = [\n    {\n        path: <span class=\"hljs-string\">&#x27;/&#x27;</span>,\n        name: <span class=\"hljs-string\">&#x27;Home&#x27;</span>,\n        exact: <span class=\"hljs-literal\">true</span>,\n        component: lazy(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">&#x27;../pages/home&#x27;</span>))\n    },\n    {\n        path: <span class=\"hljs-string\">&#x27;/login&#x27;</span>,\n        name: <span class=\"hljs-string\">&#x27;Login&#x27;</span>,\n        component: lazy(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">&#x27;../pages/login&#x27;</span>))\n    },\n    {\n        path: <span class=\"hljs-string\">&#x27;/user&#x27;</span>,\n        component: lazy(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">&#x27;../pages/user&#x27;</span>)),\n        routes: [\n            {\n                path: <span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>,\n                component: lazy(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">&#x27;../pages/user/user-details&#x27;</span>))\n            }\n        ]\n    }\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> routes;\n</code></pre>\n<p><code>page/home.tsx</code></p>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> Home = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Home;\n</code></pre>\n<p><code>page/login.tsx</code></p>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> Login = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>login<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Login;\n</code></pre>\n<p><code>page/user/index.tsx</code></p>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React, { useState, useEffect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { renderRoutes } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-config&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { Link } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-dom&#x27;</span>;\n\n<span class=\"hljs-keyword\">interface</span> User {\n    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">number</span>;\n    name: <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> userList: <span class=\"hljs-built_in\">Array</span>&lt;User&gt; = [\n    {\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;用户001&#x27;</span>\n    },\n    {\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>,\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;用户002&#x27;</span>\n    },\n    {\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">3</span>,\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;用户003&#x27;</span>\n    }\n];\n\n<span class=\"hljs-keyword\">const</span> User = <span class=\"hljs-function\">(<span class=\"hljs-params\">props: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> [list, setList] = useState&lt;<span class=\"hljs-built_in\">Array</span>&lt;User&gt;&gt;([]);\n    <span class=\"hljs-keyword\">const</span> getList = <span class=\"hljs-keyword\">async</span> () =&gt; {\n        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve</span>) =&gt;</span> <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> resolve(userList), <span class=\"hljs-number\">1000</span>));\n        setList(data <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">Array</span>&lt;User&gt;);\n    };\n\n    useEffect(<span class=\"hljs-function\">() =&gt;</span> {\n        getList();\n    }, []);\n\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>列表：<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n                {list.map((item) =&gt; (\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item.id}</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">{</span>`/<span class=\"hljs-attr\">user</span>/${<span class=\"hljs-attr\">item.id</span>}`}&gt;</span>{item.name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                ))}\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n            {renderRoutes(props.route.routes)}\n        <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n    );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> User;\n</code></pre>\n<blockquote>\n<p>用户详情使用了嵌套路由，所以在此处需要再次使用<code>renderRoutes(props.route.routes)</code>来渲染子路由</p>\n</blockquote>\n<p><code>page/user/user-details.tsx</code></p>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> UserDetails = <span class=\"hljs-function\">(<span class=\"hljs-params\">props: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>用户详情：{props.match.params.id}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> UserDetails;\n</code></pre>\n<p>从上述列子可以总结出：首先需要一个<code>Router(BrowserRouter/HashRouter)</code>以及根据需求使用<code>Switch</code>来包裹路由，然后将所有的路由信息放到一个文件进行配置，并通过<code>renderRoutes</code>来生成并渲染<code>Route</code>。如果需要使用嵌套则需要在嵌套路由的父路由中使用<code>renderRoutes</code>生成渲染出子路由。若需要路由懒加载处理，则需要通过<code>Suspence</code>和<code>React.lazy</code>结合使用。</p>\n<p>路由配置属性：</p>\n<ul>\n<li><code>path</code>：路由路径</li>\n<li><code>exact</code>：是否精准匹配</li>\n<li><code>strict</code>：是否严格匹配</li>\n<li><code>component</code>：路由组件</li>\n<li><code>render</code>：路由渲染函数</li>\n</ul>\n<h2 id=\"路由鉴权\">路由鉴权</h2>\n<p>其实，<code>react-router-config</code>的代码量并不大，其<code>renderRoutes</code>的原理就是解析配置文件并渲染成<code>Route</code>组件，但是不支持路由鉴权,如果需要路由鉴权的话，可以通过<code>withRouter</code>封装一个鉴权组件，然后用其包裹</p>\n<pre><code class=\"language-tsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { withRouter } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { Redirect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-dom&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> AuthRoute = withRouter(<span class=\"hljs-function\">(<span class=\"hljs-params\">props: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> { children, history } = props;\n\n    <span class=\"hljs-keyword\">const</span> token = <span class=\"hljs-built_in\">localStorage</span>.getItem(<span class=\"hljs-string\">&#x27;token&#x27;</span>);\n\n    <span class=\"hljs-keyword\">if</span> (history.location.pathname !== <span class=\"hljs-string\">&#x27;/login&#x27;</span> &amp;&amp; !token) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Redirect</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/login&quot;</span> /&gt;</span></span>;\n    }\n\n    <span class=\"hljs-keyword\">return</span> children;\n});\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> AuthRoute;\n</code></pre>\n<p>调整<code>App.tsx</code>文件，用<code>AuthRoute</code>组件包裹<code>renderRoutes</code></p>\n<pre><code class=\"language-diff\"><span class=\"hljs-keyword\">import</span> React, { Suspense } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserRouter, Link, Switch } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-dom&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { renderRoutes } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-router-config&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> routes <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./routes&#x27;</span>;\n+<span class=\"hljs-keyword\">import</span> AuthRoute <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./components/AuthRoute&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Suspense</span> <span class=\"hljs-attr\">fallback</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">div</span>&gt;</span>loading...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>}&gt;\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BrowserRouter</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/login&quot;</span>&gt;</span>Login<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/user&quot;</span>&gt;</span>User<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Switch</span>&gt;</span>\n-                    {renderRoutes(routes)}\n+                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AuthRoute</span>&gt;</span>{renderRoutes(routes)}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AuthRoute</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Switch</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BrowserRouter</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Suspense</span>&gt;</span></span>\n    );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> App;\n</code></pre>\n"}