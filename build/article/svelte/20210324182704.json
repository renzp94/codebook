{"title":"Svelte中的双向数据绑定和生命周期","slug":"svelte","time":"2021-03-24T22:30:46.000Z","author":"renzp94","status":"done","html":"<h2 id=\"双向数据绑定\">双向数据绑定</h2>\n<p>在<code>Svelte</code>中数据流是自上而下的，即单项数据流(父组件可以将数据通过<code>prop</code>传递给子组件，但是子组件不能直接修改<code>prop</code>影响父组件的值，一般可通过事件传递给父组件，然后父组件在捕获事件并在事件中修改其值)。但是在<code>Svelte</code>中提供了<code>bind:value</code>指令可以实现双向数据流，就像<code>Vue</code>中的<code>v-model</code>。</p>\n<h3 id=\"input\">Input</h3>\n<p><code>input</code>不同类型实现双向数据流的方式：</p>\n<ul>\n<li>输入框(<code>text/password/number</code>)、文本域(<code>textarea</code>)：<code>bind:value</code></li>\n<li>单选框(<code>radio</code>)：可以通过<code>bind:group</code>来绑定指定当前选中值，通过<code>value</code>来指定值。</li>\n<li>多选框(<code>checkbox</code>)：可以通过<code>bind:group</code>来绑定指定当前选中值，通过<code>value</code>来指定值，也可通过<code>bind:checked</code>来控制单个多选框状态。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/4c315a7863984aa6828b8d53d03d2137?version=3.35.0\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">let</span> value = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> textareaValue = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> step = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">let</span> checked = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">let</span> radio = <span class=\"hljs-string\">&#x27;1&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> checkboxGroup = [<span class=\"hljs-string\">&#x27;1&#x27;</span>];\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span></span><span class=\"hljs-template-variable\">{value}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">bind:value</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span></span><span class=\"hljs-template-variable\">{textareaValue}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">textarea</span> <span class=\"hljs-attr\">bind:value</span>=</span></span><span class=\"hljs-template-variable\">{textareaValue}</span><span class=\"xml\"><span class=\"hljs-tag\"> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;number&quot;</span> <span class=\"hljs-attr\">bind:value</span>=</span></span><span class=\"hljs-template-variable\">{step}</span><span class=\"xml\"><span class=\"hljs-tag\"> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;range&quot;</span> <span class=\"hljs-attr\">bind:value</span>=</span></span><span class=\"hljs-template-variable\">{step}</span><span class=\"xml\"><span class=\"hljs-tag\"> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\nradio：</span><span class=\"hljs-template-variable\">{radio}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>选项1<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">bind:group</span>=</span></span><span class=\"hljs-template-variable\">{radio}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;1&quot;</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>选项2<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">bind:group</span>=</span></span><span class=\"hljs-template-variable\">{radio}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;2&quot;</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>选项3<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">bind:group</span>=</span></span><span class=\"hljs-template-variable\">{radio}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;3&quot;</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\nchecked：</span><span class=\"hljs-template-variable\">{checked}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">bind:checked</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\ncheckboxGroup：</span><span class=\"hljs-template-variable\">{checkboxGroup}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>选项1<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">bind:group</span>=</span></span><span class=\"hljs-template-variable\">{checkboxGroup}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;1&quot;</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>选项2<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">bind:group</span>=</span></span><span class=\"hljs-template-variable\">{checkboxGroup}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;2&quot;</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>选项3<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">bind:group</span>=</span></span><span class=\"hljs-template-variable\">{checkboxGroup}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;3&quot;</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span></span>\n</code></pre>\n<h3 id=\"select\">Select</h3>\n<p><code>select</code>通过<code>bind:value</code>来实现双向数据流，注意如果没有设置初始值的话，则默认为第一个，如果多选可以设置属性<code>multiple</code>。</p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">let</span> value = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> valueGroup = [];\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>value:</span><span class=\"hljs-template-variable\">{value}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">bind:value</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;1&quot;</span>&gt;</span>选项1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;2&quot;</span>&gt;</span>选项2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;3&quot;</span>&gt;</span>选项3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;4&quot;</span>&gt;</span>选项4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>valueGroup: </span><span class=\"hljs-template-variable\">{valueGroup}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">multiple</span> <span class=\"hljs-attr\">bind:value</span>=</span></span><span class=\"hljs-template-variable\">{valueGroup}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;1&quot;</span>&gt;</span>选项1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;2&quot;</span>&gt;</span>选项2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;3&quot;</span>&gt;</span>选项3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;4&quot;</span>&gt;</span>选项4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span></span>\n</code></pre>\n<h3 id=\"可编辑元素\">可编辑元素</h3>\n<p>当元素设置属性<code>contenteditable=&quot;true&quot;</code>时，元素就变成了一个可修改的元素了。可通过<code>bind:innerHTML</code>来实现双向数据流。</p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">let</span> html = <span class=\"hljs-string\">&#x27;&lt;p&gt;内容&lt;/p&gt;&#x27;</span>;\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>\n    html: {html}\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;html&quot;</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">&quot;true&quot;</span> <span class=\"hljs-attr\">bind:innerHTML</span>=<span class=\"hljs-string\">{html}</span> /&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n    <span class=\"hljs-selector-class\">.html</span> {\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#000</span>;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n</code></pre>\n<h3 id=\"audio、video\">Audio、Video</h3>\n<p><code>Audio</code>和<code>Video</code>中有一些属性是只读的，不能实现双向绑定：<code>duration</code>、<code>buffered</code>、<code>seekable</code>、<code>played</code>、<code>seeking</code>、<code>ended</code>。可双向数据绑定：<code>currentTime</code>、<code>playbackRate</code>、<code>paused</code>、<code>volume</code>、<code>muted</code></p>\n<h3 id=\"块级元素\">块级元素</h3>\n<p>块级元素的这些属性可以实现双向数据绑定：<code>clientWidth</code>、<code>clientHeight</code>、<code>offsetWidth</code>、<code>offsetHeight</code></p>\n<h3 id=\"this\">this</h3>\n<p>如果想访问 DOM 元素，就像<code>Vue</code>中的<code>ref</code>那样，可以通过<code>bind:this</code>，注意：<code>bind:this</code>需要在生命周期函数<code>onMount</code>中才能获取到。</p>\n<p><a href=\"https://svelte.dev/repl/1c884a56e3d4458ab09e2a35712d90da?version=3.35.0\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { onMount } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> input;\n\n    onMount(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(input);\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">bind:this</span>=<span class=\"hljs-string\">{input}</span> /&gt;</span>\n</code></pre>\n<h3 id=\"组件的双向数据\">组件的双向数据</h3>\n<p>组件的双向数据绑定也可通过<code>bind:value</code>来实现。</p>\n<p><a href=\"https://svelte.dev/repl/430df55f1917484d858e1a9801a0f1c1?version=3.35.0\">在线 REPL</a></p>\n<p><code>Input.svelte</code></p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">let</span> value;\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">bind:value</span> /&gt;</span>\n</code></pre>\n<p><code>App.svelte</code></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./Input.svelte&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> value = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>value:</span><span class=\"hljs-template-variable\">{value}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">bind:value</span> /&gt;</span></span>\n</code></pre>\n<h2 id=\"生命周期\">生命周期</h2>\n<p>在<code>Svelte</code>主要有一下几个生命周期：</p>\n<ul>\n<li><code>script</code>：在<code>script</code>标签中的代码都会在创建前运行。</li>\n<li><code>onMount</code>：当组件创建完成首次渲染 DOM 后触发此生命周期。如果在此生命周期中返回一个函数，则在销毁组件时调用。</li>\n<li><code>beforeUpdate</code>：当组件状态发生变化且在 DOM 更新前会触发此生命周期。</li>\n<li><code>afterUpdate</code>：当组件状态发生变化且 DOM 更新后会触发此生命周期。</li>\n<li><code>onDestroy</code>：当组件销毁时触发此生命周期。</li>\n</ul>\n<p>其中，还有一个<code>tick</code>函数，此函数的作用相当于<code>Vue</code>中的<code>nextTick</code>。当组件状态发生改变不会立即更新 DOM，如果想在更新组件状态后获取最新 DOM 可以使用<code>tick</code>。</p>\n<p><a href=\"https://svelte.dev/repl/67b4a534eb0549e5bd58d78ac573c370?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { onMount, beforeUpdate, afterUpdate, onDestroy, tick } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-string\">&#x27;world&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> h;\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;创建前&#x27;</span>);\n\n    onMount(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;onMount&#x27;</span>);\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">() =&gt;</span> {\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;onMount return function&#x27;</span>);\n        };\n    });\n\n    beforeUpdate(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;beforeUpdate：&#x27;</span>, h?.innerText);\n    });\n\n    afterUpdate(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;afterUpdate：&#x27;</span>, h?.innerText);\n    });\n\n    onDestroy(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;onDestroy&#x27;</span>);\n    });\n\n    <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-keyword\">async</span> () =&gt; {\n        name = <span class=\"hljs-string\">&#x27;Svelte&#x27;</span>;\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;onClick：&#x27;</span>, h?.innerText);\n        <span class=\"hljs-keyword\">await</span> tick();\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;onClick tick：&#x27;</span>, h?.innerText);\n    };\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">bind:this</span>=<span class=\"hljs-string\">{h}</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span>Hello {name}!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n</code></pre>\n"}