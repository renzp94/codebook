{"title":"Svelte中的动画","slug":"svelte","time":"2021-03-26T10:52:07.000Z","author":"renzp94","status":"done","html":"<h2 id=\"motion\">motion</h2>\n<p><code>Svelte</code>提供一个<code>svelte/motion</code>模块，用于支持动画，此模块有两个函数：<code>tweened</code>、<code>spring</code>，通过这两个函数可以创建一个<code>store</code>，然后通过<code>set</code>设置和<code>update</code>更新其值。</p>\n<h3 id=\"tweened\">tweened</h3>\n<p>通过<code>tweened</code>创建的值当发生改变时，不会立即更新而是随着时间动态的更新。<code>tweened</code>主要接受两个参数：</p>\n<ul>\n<li><code>value</code>：初始值</li>\n<li><code>option</code>：<ul>\n<li><code>deplay</code>：延时执行的时间(毫秒)</li>\n<li><code>duration</code>：持续时间(毫秒)</li>\n<li><code>easing</code>：动画函数。可以使用<code>svelte/easing</code>提供的函数</li>\n<li><code>interpolate</code>：自定义动画区间的值。必须是<code>(a,b) =&gt; t =&gt; value</code>格式的函数，其中<code>a</code>为起始值，<code>b</code>为目标值，<code>t</code>是 0~1 之前的数字，<code>value</code>是结果。如：两个颜色间平滑过渡可以用<a href=\"https://github.com/d3/d3-interpolate\">d3-interpolate</a>。</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/88d9b09c4c984de7ad47dd3c103ee565?version=3.35.0\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ tweened }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/motion&#x27;</span>;\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ cubicOut }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/easing&#x27;</span>;\n\n    <span class=\"hljs-keyword\">const</span> progressList = [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">75</span>, <span class=\"hljs-number\">100</span>];\n\n    <span class=\"hljs-keyword\">let</span> progress = tweened(<span class=\"hljs-number\">0</span>, </span></span><span class=\"hljs-template-variable\">{\n        duration: 300,\n        easing: cubicOut\n    }</span><span class=\"xml\">);\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;range&quot;</span> <span class=\"hljs-attr\">bind:value</span>=</span></span><span class=\"hljs-template-variable\">{$progress}</span><span class=\"xml\"><span class=\"hljs-tag\"> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    </span><span class=\"hljs-template-tag\">{#<span class=\"hljs-name\">each</span> progressList as item (item)}</span><span class=\"xml\">\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{() =&gt; progress.set(item)}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span></span><span class=\"hljs-template-variable\">{item}</span><span class=\"xml\">%<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    </span><span class=\"hljs-template-tag\">{/<span class=\"hljs-name\">each</span>}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n</code></pre>\n<h3 id=\"spring\">spring</h3>\n<p><code>spring</code>是对<code>tweened</code>的一个补充用于弹性设置，适用于多个值间的变化。主要接受两个参数：</p>\n<ul>\n<li><code>value</code>：初始值</li>\n<li><code>option</code>：<ul>\n<li><code>stiffness</code>：0~1，值越高，弹性越大，默认为：<code>0.15</code></li>\n<li><code>damping</code>：0~1，值越高，弹性越小，默认为：<code>0.8</code></li>\n<li><code>precision</code>：精确稳定的值，值越低代表越精确，默认为：<code>0.001</code></li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/12b30f1b72df49ceae52bb4856838b4e?version=3.35.0\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { spring } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/motion&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> coords = spring(\n        { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">50</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">50</span> },\n        {\n            <span class=\"hljs-attr\">stiffness</span>: <span class=\"hljs-number\">0.1</span>,\n            <span class=\"hljs-attr\">damping</span>: <span class=\"hljs-number\">0.25</span>\n        }\n    );\n\n    <span class=\"hljs-keyword\">let</span> size = spring(<span class=\"hljs-number\">10</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;position: absolute; right: 1em;&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>stiffness ({coords.stiffness})<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">bind:value</span>=<span class=\"hljs-string\">{coords.stiffness}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;range&quot;</span> <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">&quot;1&quot;</span> <span class=\"hljs-attr\">step</span>=<span class=\"hljs-string\">&quot;0.01&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>damping ({coords.damping})<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">bind:value</span>=<span class=\"hljs-string\">{coords.damping}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;range&quot;</span> <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">&quot;1&quot;</span> <span class=\"hljs-attr\">step</span>=<span class=\"hljs-string\">&quot;0.01&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span>\n    <span class=\"hljs-attr\">on:mousemove</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> coords.set({ x: e.clientX, y: e.clientY })}\n    on:mousedown={() =&gt; size.set(30)}\n    on:mouseup={() =&gt; size.set(10)}\n&gt;\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">circle</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">{$coords.x}</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">{$coords.y}</span> <span class=\"hljs-attr\">r</span>=<span class=\"hljs-string\">{$size}</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n    svg {\n        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n        <span class=\"hljs-attribute\">margin</span>: -<span class=\"hljs-number\">8px</span>;\n    }\n    circle {\n        fill: <span class=\"hljs-number\">#ff3e00</span>;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n</code></pre>\n<h2 id=\"transitions\">Transitions</h2>\n<p><code>Svelte</code>提供了<code>store/transition</code>模块用于过渡动画，其中有<code>fade</code>、<code>blur</code>、<code>fly</code>、<code>slide</code>、<code>scale</code>、<code>draw</code>、<code>crossfade</code>。可通过<code>transition:xxx</code>来设置<code>in</code>、<code>out</code>的动画，也可单独设置动画：<code>in:xxx</code>、<code>out:xxx</code>。</p>\n<h3 id=\"fade\">fade</h3>\n<p>对元素的不透明度进行动画处理。接受以下参数：</p>\n<ul>\n<li><code>delay</code>：延迟的毫秒数，默认为<code>0</code>。</li>\n<li><code>duration</code>：转换持续的毫秒数，默认为<code>400</code>。</li>\n<li><code>easing</code>：过渡动画，可以使用<code>svelte/easing</code>提供的函数，默认为<code>linear</code>。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/aa22fd4a77534c6c9394331205c24aa0?version=3.35.0\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { fade } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/transition&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> status = <span class=\"hljs-literal\">true</span>;\n\n    <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> (status = !status);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span> 切换Hello显示状态 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n{#if status}\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">transition:fade</span>&gt;</span>Hello!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">out:fade</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">delay:</span> <span class=\"hljs-number\">250</span>, duration: <span class=\"hljs-number\">300</span> }}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>out Hello!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">in:fade</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">delay:</span> <span class=\"hljs-number\">250</span>, duration: <span class=\"hljs-number\">300</span> }}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>in Hello!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">transition:fade</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">delay:</span> <span class=\"hljs-number\">250</span>, duration: <span class=\"hljs-number\">300</span> }}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>延迟Hello!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n{/if}</span>\n</code></pre>\n<h3 id=\"blur\">blur</h3>\n<p>对元素的不透明度添加滤镜动画处理。接受以下参数：</p>\n<ul>\n<li><code>delay</code>：延迟的毫秒数，默认为<code>0</code>。</li>\n<li><code>duration</code>：转换持续的毫秒数，默认为<code>400</code>。</li>\n<li><code>easing</code>：过渡动画，可以使用<code>svelte/easing</code>提供的函数，默认为<code>cubicOut</code>。</li>\n<li><code>opacity</code>：不透明度，默认为<code>0</code>。</li>\n<li><code>amount</code>：模糊大小(单位为像素)，默认为<code>5</code>。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/ed808d19fd1b4196a85b7d8761c21581?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ blur }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/transition&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> status = <span class=\"hljs-literal\">true</span>;\n\n    <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> (status = !status);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onClick}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span> 切换Hello显示状态 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{#<span class=\"hljs-name\">if</span> status}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">transition:blur</span>&gt;</span>Hello!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{/<span class=\"hljs-name\">if</span>}</span>\n</code></pre>\n<h3 id=\"fly\">fly</h3>\n<p>对元素的<code>x</code>、<code>y</code>以及不透明度进行动画处理。接受以下参数：</p>\n<ul>\n<li><code>delay</code>：延迟的毫秒数，默认为<code>0</code>。</li>\n<li><code>duration</code>：转换持续的毫秒数，默认为<code>400</code>。</li>\n<li><code>easing</code>：过渡动画，可以使用<code>svelte/easing</code>提供的函数，默认为<code>cubicOut</code>。</li>\n<li><code>opacity</code>：不透明度，默认为<code>0</code>。</li>\n<li><code>x</code>：<code>x</code>轴偏移量，默认为<code>0</code>。</li>\n<li><code>y</code>：<code>y</code>轴偏移量，默认为<code>0</code>。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/e2bfff8f0a9841239f86576ed6fcf33f?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { fly } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/transition&#x27;</span>;\n    <span class=\"hljs-keyword\">import</span> { quintOut } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/easing&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> status = <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> (status = !status);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span> 切换Hello显示状态 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n{#if status}\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>\n        <span class=\"hljs-attr\">transition:fly</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">delay:</span> <span class=\"hljs-number\">250</span>, duration: <span class=\"hljs-number\">300</span>, x: <span class=\"hljs-number\">100</span>, y: <span class=\"hljs-number\">100</span>, opacity: <span class=\"hljs-number\">0.5</span>, easing: quintOut }}</span><span class=\"xml\"><span class=\"hljs-tag\">\n    &gt;</span>\n        Hello\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n{/if}</span>\n</code></pre>\n<h3 id=\"slide\">slide</h3>\n<p>对元素的滑入，滑出进行动画处理。接受以下参数：</p>\n<ul>\n<li><code>delay</code>：延迟的毫秒数，默认为<code>0</code>。</li>\n<li><code>duration</code>：转换持续的毫秒数，默认为<code>400</code>。</li>\n<li><code>easing</code>：过渡动画，可以使用<code>svelte/easing</code>提供的函数，默认为<code>cubicOut</code>。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/9c9a3d58dff847e5a7eabdcea4a4e766?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ slide }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/transition&#x27;</span>;\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ quintOut }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/easing&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> status = <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> (status = !status);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onClick}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span> 切换Hello显示状态 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{#<span class=\"hljs-name\">if</span> status}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">transition:slide</span>=</span></span><span class=\"hljs-template-variable\">{{ delay: 250, duration: 300, easing: quintOut }</span><span class=\"xml\"><span class=\"hljs-tag\">}&gt;</span>Hello<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{/<span class=\"hljs-name\">if</span>}</span>\n</code></pre>\n<h3 id=\"scale\">scale</h3>\n<p>对元素的不透明度进行拉远动画处理。接受以下参数：</p>\n<ul>\n<li><code>delay</code>：延迟的毫秒数，默认为<code>0</code>。</li>\n<li><code>duration</code>：转换持续的毫秒数，默认为<code>400</code>。</li>\n<li><code>easing</code>：过渡动画，可以使用<code>svelte/easing</code>提供的函数，默认为<code>cubicOut</code>。</li>\n<li><code>start</code>：拉远比例<code>0~1</code>，默认为<code>0</code>。</li>\n<li><code>opacity</code>：不透明度，默认为<code>0</code>。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/35dcccafc9d749619504b82f93411981?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { scale } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/transition&#x27;</span>;\n    <span class=\"hljs-keyword\">import</span> { quintOut } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/easing&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> status = <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> (status = !status);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span> 切换Hello显示状态 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n{#if status}\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">transition:scale</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">duration:</span> <span class=\"hljs-number\">500</span>, delay: <span class=\"hljs-number\">500</span>, opacity: <span class=\"hljs-number\">0.5</span>, start: <span class=\"hljs-number\">0.3</span>, easing: quintOut }}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>\n        Hello\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n{/if}</span>\n</code></pre>\n<h3 id=\"draw\">draw</h3>\n<p>对 svg 元素的笔触进行动画处理。接受以下参数：</p>\n<ul>\n<li><code>delay</code>：延迟的毫秒数，默认为<code>0</code>。</li>\n<li><code>duration</code>：转换持续的毫秒数，默认为<code>400</code>。</li>\n<li><code>easing</code>：过渡动画，可以使用<code>svelte/easing</code>提供的函数，默认为<code>cubicOut</code>。</li>\n<li><code>speed</code>：转换持续的毫秒数，默认为<code>400</code>。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/0ee8d1cc74e54201a97f0f5995720b6f?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ draw }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/transition&#x27;</span>;\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ quintOut }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/easing&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> status = <span class=\"hljs-literal\">true</span>;\n    <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> (status = !status);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onClick}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span> 切换显示状态 <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span> <span class=\"hljs-attr\">viewBox</span>=<span class=\"hljs-string\">&quot;0 0 5 5&quot;</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span>\n    </span><span class=\"hljs-template-tag\">{#<span class=\"hljs-name\">if</span> status}</span><span class=\"xml\">\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span>\n            <span class=\"hljs-attr\">transition:draw</span>=</span></span><span class=\"hljs-template-variable\">{{ duration: 5000, easing: quintOut }</span><span class=\"xml\"><span class=\"hljs-tag\">}\n            <span class=\"hljs-attr\">d</span>=<span class=\"hljs-string\">&quot;M2 1 h1 v1 h1 v1 h-1 v1 h-1 v-1 h-1 v-1 h1 z&quot;</span>\n            <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">&quot;none&quot;</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">&quot;cornflowerblue&quot;</span>\n            <span class=\"hljs-attr\">stroke-width</span>=<span class=\"hljs-string\">&quot;0.1px&quot;</span>\n            <span class=\"hljs-attr\">stroke-linejoin</span>=<span class=\"hljs-string\">&quot;round&quot;</span>\n        /&gt;</span>\n    </span><span class=\"hljs-template-tag\">{/<span class=\"hljs-name\">if</span>}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span></span>\n</code></pre>\n<h2 id=\"flip\">flip</h2>\n<p><code>Svelte</code>还提供了<code>svelte/animate</code>模块，目前只有<code>flip</code>。<code>flip</code>计算元素的开始位置和结束位置，并进行动画处理，接受以下参数：</p>\n<ul>\n<li><code>delay</code>：延迟的毫秒数，默认为<code>0</code>。</li>\n<li><code>duration</code>：转换持续的时间(类型：number | function)，默认为<code>d =&gt; Math.sqrt(d) * 120</code>。<ul>\n<li><code>number</code>：以毫秒为单位。</li>\n<li><code>function</code>：<code>distance: number =&gt; duration: number</code> 接受以像素为单位的距离，返回以毫秒为单位的持续时间。</li>\n</ul>\n</li>\n<li><code>easing</code>：过渡动画，可以使用<code>svelte/easing</code>提供的函数，默认为<code>cubicOut</code>。</li>\n</ul>\n<p><a href=\"https://svelte.dev/repl/c87a2d4bc7614ebbbffbda857f3f0d28?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { quintOut } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/easing&#x27;</span>;\n    <span class=\"hljs-keyword\">import</span> { crossfade } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/transition&#x27;</span>;\n\n    <span class=\"hljs-keyword\">const</span> [send, receive] = crossfade({\n        <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> <span class=\"hljs-built_in\">Math</span>.sqrt(d * <span class=\"hljs-number\">200</span>),\n\n        <span class=\"hljs-function\"><span class=\"hljs-title\">fallback</span>(<span class=\"hljs-params\">node, params</span>)</span> {\n            <span class=\"hljs-keyword\">const</span> style = getComputedStyle(node);\n            <span class=\"hljs-keyword\">const</span> transform = style.transform === <span class=\"hljs-string\">&#x27;none&#x27;</span> ? <span class=\"hljs-string\">&#x27;&#x27;</span> : style.transform;\n\n            <span class=\"hljs-keyword\">return</span> {\n                <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\">600</span>,\n                <span class=\"hljs-attr\">easing</span>: quintOut,\n                <span class=\"hljs-attr\">css</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">t</span>) =&gt;</span> <span class=\"hljs-string\">`\n                    transform: <span class=\"hljs-subst\">${transform}</span> scale(<span class=\"hljs-subst\">${t}</span>);\n                    opacity: <span class=\"hljs-subst\">${t}</span>\n                `</span>\n            };\n        }\n    });\n\n    <span class=\"hljs-keyword\">let</span> uid = <span class=\"hljs-number\">1</span>;\n\n    <span class=\"hljs-keyword\">let</span> todos = [\n        { <span class=\"hljs-attr\">id</span>: uid++, done: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;write some docs&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: uid++, done: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;start writing blog post&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: uid++, done: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;buy some milk&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: uid++, done: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;mow the lawn&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: uid++, done: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;feed the turtle&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: uid++, done: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;fix some bugs&#x27;</span> }\n    ];\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">add</span>(<span class=\"hljs-params\">input</span>) </span>{\n        <span class=\"hljs-keyword\">const</span> todo = {\n            <span class=\"hljs-attr\">id</span>: uid++,\n            done: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">description</span>: input.value\n        };\n\n        todos = [todo, ...todos];\n        input.value = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">remove</span>(<span class=\"hljs-params\">todo</span>) </span>{\n        todos = todos.filter(<span class=\"hljs-function\">(<span class=\"hljs-params\">t</span>) =&gt;</span> t !== todo);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mark</span>(<span class=\"hljs-params\">todo, done</span>) </span>{\n        todo.done = done;\n        remove(todo);\n        todos = todos.concat(todo);\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;board&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span>\n        <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;what needs to be done?&quot;</span>\n        <span class=\"hljs-attr\">on:keydown</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> e.key === &#x27;Enter&#x27; &amp;&amp; add(e.target)}\n    /&gt;\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;left&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>todo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n        {#each todos.filter((t) =&gt; !t.done) as todo (todo.id)}\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">in:receive</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">key:</span> todo.id }}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">out:send</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">key:</span> todo.id }}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">on:change</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> mark(todo, true)} /&gt;\n                {todo.description}\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> remove(todo)}&gt;remove<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n        {/each}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;right&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>done<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n        {#each todos.filter((t) =&gt; t.done) as todo (todo.id)}\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;done&quot;</span> <span class=\"hljs-attr\">in:receive</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">key:</span> todo.id }}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">out:send</span>=</span></span><span class=\"hljs-template-variable\">{{ <span class=\"hljs-name\">key:</span> todo.id }}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">checked</span> <span class=\"hljs-attr\">on:change</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> mark(todo, false)} /&gt;\n                {todo.description}\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> remove(todo)}&gt;remove<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n        {/each}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n    <span class=\"hljs-selector-class\">.board</span> {\n        <span class=\"hljs-attribute\">display</span>: grid;\n        grid-template-<span class=\"hljs-attribute\">columns</span>: <span class=\"hljs-number\">1</span>fr <span class=\"hljs-number\">1</span>fr;\n        grid-gap: <span class=\"hljs-number\">1em</span>;\n        <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">36em</span>;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;\n    }\n\n    <span class=\"hljs-selector-class\">.board</span> &gt; <span class=\"hljs-selector-tag\">input</span> {\n        <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.4em</span>;\n        grid-column: <span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">3</span>;\n    }\n\n    <span class=\"hljs-selector-tag\">h2</span> {\n        <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2em</span>;\n        <span class=\"hljs-attribute\">font-weight</span>: <span class=\"hljs-number\">200</span>;\n        user-select: none;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0.5em</span> <span class=\"hljs-number\">0</span>;\n    }\n\n    <span class=\"hljs-selector-tag\">label</span> {\n        <span class=\"hljs-attribute\">position</span>: relative;\n        <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-number\">1.2</span>;\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0.5em</span> <span class=\"hljs-number\">2.5em</span> <span class=\"hljs-number\">0.5em</span> <span class=\"hljs-number\">2em</span>;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0.5em</span> <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">2px</span>;\n        user-select: none;\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">240</span>, <span class=\"hljs-number\">8%</span>, <span class=\"hljs-number\">70%</span>);\n        <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">240</span>, <span class=\"hljs-number\">8%</span>, <span class=\"hljs-number\">93%</span>);\n        <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#333</span>;\n    }\n\n    <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-attr\">[type=<span class=\"hljs-string\">&#x27;checkbox&#x27;</span>]</span> {\n        <span class=\"hljs-attribute\">position</span>: absolute;\n        <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0.5em</span>;\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0.6em</span>;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;\n    }\n\n    <span class=\"hljs-selector-class\">.done</span> {\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">240</span>, <span class=\"hljs-number\">8%</span>, <span class=\"hljs-number\">90%</span>);\n        <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">240</span>, <span class=\"hljs-number\">8%</span>, <span class=\"hljs-number\">98%</span>);\n    }\n\n    <span class=\"hljs-selector-tag\">button</span> {\n        <span class=\"hljs-attribute\">position</span>: absolute;\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0.2em</span>;\n        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2em</span>;\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n        <span class=\"hljs-attribute\">background</span>: no-repeat <span class=\"hljs-number\">50%</span> <span class=\"hljs-number\">50%</span>\n            <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;data:image/svg+xml,%3Csvg xmlns=&#x27;http://www.w3.org/2000/svg&#x27; viewBox=&#x27;0 0 24 24&#x27;%3E%3Cpath fill=&#x27;%23676778&#x27; d=&#x27;M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M17,7H14.5L13.5,6H10.5L9.5,7H7V9H17V7M9,18H15A1,1 0 0,0 16,17V10H8V17A1,1 0 0,0 9,18Z&#x27;%3E%3C/path%3E%3C/svg%3E&quot;</span>);\n        <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">1.4em</span> <span class=\"hljs-number\">1.4em</span>;\n        <span class=\"hljs-attribute\">border</span>: none;\n        <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">transition</span>: opacity <span class=\"hljs-number\">0.2s</span>;\n        <span class=\"hljs-attribute\">text-indent</span>: -<span class=\"hljs-number\">9999px</span>;\n        <span class=\"hljs-attribute\">cursor</span>: pointer;\n    }\n\n    <span class=\"hljs-selector-tag\">label</span><span class=\"hljs-selector-pseudo\">:hover</span> <span class=\"hljs-selector-tag\">button</span> {\n        <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">1</span>;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></span>\n</code></pre>\n<h2 id=\"svelteeasing\">svelte/easing</h2>\n<p><code>Svelte</code>提供了以下过渡动画：</p>\n<table>\n<thead>\n<tr>\n<th>ease</th>\n<th>in</th>\n<th>out</th>\n<th>inOut</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>back</td>\n<td>backIn</td>\n<td>backOut</td>\n<td>backInOut</td>\n</tr>\n<tr>\n<td>bounce</td>\n<td>bounceIn</td>\n<td>bounceOut</td>\n<td>bounceInOut</td>\n</tr>\n<tr>\n<td>circ</td>\n<td>circIn</td>\n<td>circOut</td>\n<td>circInOut</td>\n</tr>\n<tr>\n<td>cubic</td>\n<td>cubicIn</td>\n<td>cubicOut</td>\n<td>cubicInOut</td>\n</tr>\n<tr>\n<td>elastic elasticIn elasticOut elasticInOut</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>expo</td>\n<td>expoIn</td>\n<td>expoOut</td>\n<td>expoInOut</td>\n</tr>\n<tr>\n<td>quad</td>\n<td>quadIn</td>\n<td>quadOut</td>\n<td>quadInOut</td>\n</tr>\n<tr>\n<td>quart</td>\n<td>quartIn</td>\n<td>quartOut</td>\n<td>quartInOut</td>\n</tr>\n<tr>\n<td>quint</td>\n<td>quintIn</td>\n<td>quintOut</td>\n<td>quintInOut</td>\n</tr>\n<tr>\n<td>sine</td>\n<td>sineIn</td>\n<td>sineOut</td>\n<td>sineInOut</td>\n</tr>\n</tbody></table>\n<p>由此可见，<code>Svelte</code>中内置的动画还是很强大，组合使用可以使用户体验感非常好。</p>\n"}