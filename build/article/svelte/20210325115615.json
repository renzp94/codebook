{"title":"Svelte中的状态管理","slug":"svelte","time":"2021-03-25T11:56:56.000Z","author":"renzp94","status":"done","html":"<p>状态管理一般用于全局共用的一些数据的管理。关于状态管理，在其他的框架中都默认没有提供，都是通过新的库来支持的。比如<code>Vuex</code>和<code>Redux</code>。但在<code>Svelte</code>中内置了状态管理，而且用法非常简单。在<code>Svelte</code>中关于状态管理的函数都封装在<code>svelte/store</code>模块中，此模块可以导出<code>readable</code>，<code>writable</code>，<code>derived</code>的功能。</p>\n<h2 id=\"readable\">readable</h2>\n<p>通过<code>readable</code>创建的状态(数据)，在外部不能直接修改，只能在其内部更改。第一个参数是初始值，可为<code>null</code>，<code>undefined</code>。第二个参数是一个函数，函数接受一个<code>set</code>参数(<code>set</code>是一个函数用于处理内部数据)，如果返回一个函数，则在取消订阅时会被调用。</p>\n<p><a href=\"https://svelte.dev/repl/3794dc99ba404971bab2c9426b6c3d96?version=3.35.0\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { readable } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/store&#x27;</span>;\n\n    <span class=\"hljs-keyword\">const</span> double = <span class=\"hljs-function\">(<span class=\"hljs-params\">val</span>) =&gt;</span> val * <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">let</span> count = readable(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">set</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>;\n        set(i);\n        <span class=\"hljs-keyword\">const</span> interval = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\">() =&gt;</span> set(++i), <span class=\"hljs-number\">1000</span>);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-built_in\">clearInterval</span>(interval);\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>{double($count)}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n</code></pre>\n<blockquote>\n<p><code>$count</code>是一个语法糖，后续会说明</p>\n</blockquote>\n<h2 id=\"writable\">writable</h2>\n<p>通过<code>writable</code>创建的状态(数据)，在外部可以通过<code>update</code>更新，<code>set</code>设置值，<code>subscribe</code>订阅状态的改变(<code>subscribe</code>返回一个函数用于取消订阅)。</p>\n<p><a href=\"https://svelte.dev/repl/9d611111b7ff43e4a4dd575c3b53e292?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ onDestroy }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte&#x27;</span>;\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ writable }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/store&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> count = writable(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-keyword\">let</span> countValue = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-keyword\">const</span> unSubscribe = count.subscribe(<span class=\"hljs-function\">(<span class=\"hljs-params\">val</span>) =&gt;</span> (countValue = val));\n    <span class=\"hljs-keyword\">const</span> onSub = <span class=\"hljs-function\">() =&gt;</span> count.update(<span class=\"hljs-function\">(<span class=\"hljs-params\">n</span>) =&gt;</span> n - <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> onAdd = <span class=\"hljs-function\">() =&gt;</span> count.update(<span class=\"hljs-function\">(<span class=\"hljs-params\">n</span>) =&gt;</span> n + <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> onReset = <span class=\"hljs-function\">() =&gt;</span> count.set(<span class=\"hljs-number\">0</span>);\n\n    onDestroy(unSubscribe);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>countValue：</span><span class=\"hljs-template-variable\">{countValue}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onSub}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>-<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onAdd}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>+<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onReset}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>reset<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n</code></pre>\n<p>上面的例子中，可以通过<code>$count</code>进行精简代码，当使用<code>$count</code>时可以自动订阅状态变化以及在组件销毁时取消状态的订阅，而且<code>$count</code>是响应式的，即：<code>count.update(val =&gt; val + 1)</code>可以写成<code>$count += 1</code>。</p>\n<p><a href=\"https://svelte.dev/repl/0a0925f64695407da6ba923ce29f3689?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ writable }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/store&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> count = writable(<span class=\"hljs-number\">0</span>);\n\n    <span class=\"hljs-keyword\">const</span> onSub = <span class=\"hljs-function\">() =&gt;</span> count.update(<span class=\"hljs-function\">(<span class=\"hljs-params\">n</span>) =&gt;</span> n - <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> onAdd = <span class=\"hljs-function\">() =&gt;</span> count.update(<span class=\"hljs-function\">(<span class=\"hljs-params\">n</span>) =&gt;</span> n + <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> onReset = <span class=\"hljs-function\">() =&gt;</span> count.set(<span class=\"hljs-number\">0</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>count：</span><span class=\"hljs-template-variable\">{$count}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onSub}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>-<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onAdd}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>+<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{onReset}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>reset<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n</code></pre>\n<h2 id=\"derived\">derived</h2>\n<p>通过<code>derived</code>可以通过状态来派生出来另一个状态，当依赖的状态发生变化时则立即调用其回调。回调函数接受三个参数：第一个参数是依赖的状态。第二个参数是回调函数，回调函数第一个参数是是依赖的状态变化之后的值，第二个参数是<code>set</code>函数用于设置新的派生状态，此函数中可以进行异步操作。第三个参数是一个默认值，当回调函数是一个异步函数时，此值才有效。</p>\n<blockquote>\n<p>此外，如果不使用<code>set</code>函数，可以直接返回一个值作为派生状态。但是如果有<code>set</code>函数，则需要用<code>set</code>函数来设置。</p>\n</blockquote>\n<p><a href=\"https://svelte.dev/repl/bebb3bdfc945401a99e21d9865a07c10?version=3.35.0\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { writable, derived } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/store&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> count = writable(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-keyword\">let</span> doubleCount = derived(count, <span class=\"hljs-function\">(<span class=\"hljs-params\">$val</span>) =&gt;</span> $val * <span class=\"hljs-number\">2</span>);\n    <span class=\"hljs-keyword\">let</span> doubleSetCount = derived(count, <span class=\"hljs-function\">(<span class=\"hljs-params\">$val, set</span>) =&gt;</span> set($val * <span class=\"hljs-number\">2</span>));\n    <span class=\"hljs-keyword\">let</span> asyncDoubleCount = derived(\n        count,\n        <span class=\"hljs-keyword\">async</span> ($val, set) =&gt; {\n            <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve</span>) =&gt;</span> {\n                <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> {\n                    resolve($val * <span class=\"hljs-number\">4</span>);\n                }, <span class=\"hljs-number\">1000</span>);\n            });\n\n            set(data);\n        },\n        <span class=\"hljs-string\">&#x27;loading&#x27;</span>\n    );\n    <span class=\"hljs-keyword\">const</span> onAdd = <span class=\"hljs-function\">() =&gt;</span> $count++;\n\n    <span class=\"hljs-keyword\">let</span> time = writable(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>());\n    <span class=\"hljs-keyword\">let</span> timer = derived(time, <span class=\"hljs-function\">(<span class=\"hljs-params\">$time, set</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> interval = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\">() =&gt;</span> set(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>()), <span class=\"hljs-number\">1000</span>);\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-built_in\">clearInterval</span>(interval);\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>count: {$count}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>doubleCount: {$doubleCount}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>doubleSetCount: {$doubleSetCount}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>asyncDoubleCount: {$asyncDoubleCount}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{onAdd}</span>&gt;</span>+1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>timer: {$timer}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n</code></pre>\n<h2 id=\"get\">get</h2>\n<p>如果你仅仅是想获取状态值，可以通过<code>get</code>来获取，这个函数只是获取当前状态的值。</p>\n<p><a href=\"https://svelte.dev/repl/cb81b07703f04862bc83e6d663c08818?version=3\">在线 REPL</a></p>\n<pre><code class=\"language-svelte\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> { writable, get } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/store&#x27;</span>;\n\n    <span class=\"hljs-keyword\">let</span> count = writable(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-built_in\">console</span>.log(get(count));\n\n    <span class=\"hljs-keyword\">const</span> onAdd = <span class=\"hljs-function\">() =&gt;</span> {\n        $count++;\n        <span class=\"hljs-built_in\">console</span>.log(get(count));\n    };\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>count: {$count}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=<span class=\"hljs-string\">{onAdd}</span>&gt;</span>+1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</code></pre>\n<h2 id=\"自定义-store\">自定义 store</h2>\n<p>只要一个对象实现了<code>subscribe</code>方法，那么就是一个<code>store</code>。我们可以通过<code>svelte/store</code>提供的模块来对状态进行封装。</p>\n<p><a href=\"https://svelte.dev/repl/b28f84feec324dbc93d1283702b43d24?version=3\">在线 REPL</a></p>\n<p><code>countStore.js</code></p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> { writable } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;svelte/store&#x27;</span>;\n<span class=\"hljs-keyword\">export</span> const useCount = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n    const { subscribe, set, update } = writable(<span class=\"hljs-number\">0</span>);\n\n    <span class=\"hljs-keyword\">return</span> {\n        subscribe,\n        sub: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> update(<span class=\"hljs-function\"><span class=\"hljs-params\">(val)</span> =&gt;</span> val - <span class=\"hljs-number\">1</span>),\n        add: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> update(<span class=\"hljs-function\"><span class=\"hljs-params\">(val)</span> =&gt;</span> val + <span class=\"hljs-number\">1</span>),\n        reset: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> set(<span class=\"hljs-number\">0</span>)\n    };\n};\n</code></pre>\n<p><code>App.svelte</code></p>\n<pre><code class=\"language-svelte\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">import</span> </span></span><span class=\"hljs-template-variable\">{ useCount }</span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./countStore&#x27;</span>;\n    <span class=\"hljs-keyword\">const</span> count = useCount();\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>count：</span><span class=\"hljs-template-variable\">{$count}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{count.sub}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>-<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{count.add}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>+<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">on:click</span>=</span></span><span class=\"hljs-template-variable\">{count.reset}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>reset<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n</code></pre>\n"}