{"title":"Wigets学习之Text","slug":"Flutter Wiget","time":"2021-06-23T17:52:25.000Z","author":"renzp94","status":"done","html":"<h2 id=\"text-→-spanhtml\">Text → span(HTML)</h2>\n<blockquote>\n<p>用于显示文本的部件</p>\n</blockquote>\n<h3 id=\"参数说明\">参数说明</h3>\n<ul>\n<li><code>data</code>: 显示的内容(必传)</li>\n<li><code>style</code>: 设置文本的样式,可通过<code>TextStyle</code>设置,未设置 style 参数,则采用最近的<code>DefaultTextStyle</code>部件定义的样式,如果<code>TextStlye.inherit</code>为<code>true</code>,则指定的样式和<code>DefaultTextStyle</code>合并</li>\n<li><code>textAlign</code>: 文本对齐方式,可用<code>TextAlign</code>中的值</li>\n<li><code>textDirection</code>: 文本排列方向,<code>TextDirection.ltr(左到右)</code>,<code>TextDirection.rtl(右到左)</code></li>\n<li><code>locale</code>: 设置语言环境</li>\n<li><code>softWrap</code>: 是否换行,默认为<code>true</code></li>\n<li><code>overflow</code>: 文本溢出样式,如果不指定<code>softWrap=true</code>或者不指定<code>maxLines</code>则<code>Textoverflow.clip(截取)</code>和<code>Textoverflow.fade(超出文本渐变透明)</code>没有效果,一般常用的是<code>Textoverflow.ellipsis(超出显示省略号)</code></li>\n<li><code>textScaleFactor</code>: 文本缩放比例,可以实现控制文本大小,默认为 1.0</li>\n<li><code>maxLines</code>: 最多展示几行</li>\n<li><code>semanticsLabel</code>: 语义化描述</li>\n<li><code>textWidthBasis</code>: 定义如何测量渲染文本的宽度</li>\n</ul>\n<h4 id=\"textstyle\">TextStyle</h4>\n<ul>\n<li><code>color</code>: 设置颜色</li>\n<li><code>backgroundColor</code>: 设置背景色</li>\n<li><code>fontSize</code>: 设置大小</li>\n<li><code>fontWeight</code>: 设置粗细</li>\n<li><code>fontStyle</code>: 设置样式<code>FontStyle.italic(斜体)</code></li>\n<li><code>letterSpacing</code>: 设置间距</li>\n<li><code>height</code>: 设置行高</li>\n<li><code>decoration</code>: 设置装饰线条</li>\n<li><code>decorationColor</code>: 设置装饰线条颜色</li>\n<li><code>decorationStyle</code>: 设置装饰线条样式<code>dashed(虚线)\\dotted(点)\\double(双线)\\solid(单线)\\wavy(波浪线)</code></li>\n<li><code>decorationThickness</code>: 设置装饰线条的粗细</li>\n<li><code>fontFamily</code>: 设置字体</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  const <span class=\"hljs-type\">App</span>({<span class=\"hljs-type\">Key</span>? key}) : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Center</span>(\n      child: <span class=\"hljs-type\">Text</span>(\n        <span class=\"hljs-symbol\">&#x27;Hello</span> <span class=\"hljs-type\">Flutter</span> &#x27; * <span class=\"hljs-number\">20</span>,\n        textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n        textAlign: <span class=\"hljs-type\">TextAlign</span>.center,\n        maxLines: <span class=\"hljs-number\">2</span>,\n        overflow: <span class=\"hljs-type\">TextOverflow</span>.ellipsis,\n        style: <span class=\"hljs-type\">TextStyle</span>(\n            color: <span class=\"hljs-type\">Colors</span>.red,\n            backgroundColor: <span class=\"hljs-type\">Colors</span>.white,\n            fontWeight: <span class=\"hljs-type\">FontWeight</span>.bold,\n            fontSize: <span class=\"hljs-number\">20</span>,\n            letterSpacing: <span class=\"hljs-number\">4</span>,\n            height: <span class=\"hljs-number\">1.5</span>,\n            decoration: <span class=\"hljs-type\">TextDecoration</span>.lineThrough,\n            decorationColor: <span class=\"hljs-type\">Colors</span>.green,\n            decorationThickness: <span class=\"hljs-number\">5.0</span>),\n      ),\n    );\n  }\n}\n</code></pre>\n<h2 id=\"richtext\">RichText</h2>\n<blockquote>\n<p>展示富文本的部件</p>\n</blockquote>\n<ul>\n<li><code>text</code>：显示的内容(必填)。是一个<code>InLineSpan</code>类型。一般使用<code>TextSpan</code>部件</li>\n<li><code>textAlign</code>: 对齐方式</li>\n<li><code>textDirection</code>: 文本排列方式，一般需要指定，不指定会报错</li>\n<li><code>softWrap</code>：是否换行,默认为<code>true</code></li>\n<li><code>overflow</code>：文本溢出样式</li>\n<li><code>textScaleFactor</code>: 文本缩放比例</li>\n<li><code>maxLines</code>: 最多展示几行</li>\n<li><code>textWidthBasis</code>: 定义如何测量渲染文本的宽度</li>\n</ul>\n<h2 id=\"textspan\">TextSpan</h2>\n<blockquote>\n<p>展示文本的部件，可以嵌套使用。<code>Text</code>不能嵌套使用。</p>\n</blockquote>\n<ul>\n<li><code>text</code>: 展示的内容</li>\n<li><code>children</code>: 子部件，是一个<code>List&lt;InLineSpan&gt;</code>类型</li>\n<li><code>style</code>: 文字样式，和<code>Text</code>一致。</li>\n<li><code>recognizer</code>：手势检测，是一个<code>GestureRecognizer</code>类型</li>\n<li><code>semanticsLabel</code>: 语义化描述</li>\n</ul>\n<p>如果要使用<code>TextSpan</code>必须放在<code>RichText</code>类型的部件中，不能单独使用。除了使用<code>RichText</code>部件外还可以使用<code>Text.rich</code></p>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/gestures.dart&#x27;;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  const <span class=\"hljs-type\">App</span>({<span class=\"hljs-type\">Key</span>? key}) : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Center</span>(\n      child: <span class=\"hljs-type\">RichText</span>(\n        textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n        text: <span class=\"hljs-type\">TextSpan</span>(children: [\n          <span class=\"hljs-type\">TextSpan</span>(text: <span class=\"hljs-string\">&quot;网站: &quot;</span>),\n          <span class=\"hljs-type\">TextSpan</span>(\n              text: <span class=\"hljs-string\">&quot;codebook.vercel.app&quot;</span>,\n              style: <span class=\"hljs-type\">TextStyle</span>(color: <span class=\"hljs-type\">Colors</span>.blue),\n              recognizer: <span class=\"hljs-type\">TapGestureRecognizer</span>()..onTap = () =&gt; {print(&#x27;点击网站&#x27;)})\n        ]),\n      ),\n    );\n  }\n}\n</code></pre>\n<h2 id=\"textrich\">Text.rich</h2>\n<blockquote>\n<p>创建一个类型为<code>InLineSpan</code>的文本部件</p>\n</blockquote>\n<ul>\n<li><code>textSpan</code>：显示内容(必填)</li>\n<li><code>style</code>：和<code>Text</code>一致</li>\n<li><code>textAlign</code>: 对齐方式</li>\n<li><code>textDirection</code>: 文本排列方式，一般需要指定，不指定会报错</li>\n<li><code>softWrap</code>：是否换行,默认为<code>true</code></li>\n<li><code>overflow</code>：文本溢出样式</li>\n<li><code>textScaleFactor</code>: 文本缩放比例</li>\n<li><code>maxLines</code>: 最多展示几行</li>\n<li><code>semanticsLabel</code>: 语义化描述</li>\n<li><code>textWidthBasis</code>: 定义如何测量渲染文本的宽度</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/gestures.dart&#x27;;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  const <span class=\"hljs-type\">App</span>({<span class=\"hljs-type\">Key</span>? key}) : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Center</span>(\n      child: <span class=\"hljs-type\">Text</span>.rich(\n        <span class=\"hljs-type\">TextSpan</span>(children: [\n          <span class=\"hljs-type\">TextSpan</span>(text: <span class=\"hljs-string\">&quot;网站：&quot;</span>),\n          <span class=\"hljs-type\">TextSpan</span>(\n              text: <span class=\"hljs-string\">&quot;codebook.vercel.app&quot;</span>,\n              style: <span class=\"hljs-type\">TextStyle</span>(color: <span class=\"hljs-type\">Colors</span>.blue),\n              recognizer: <span class=\"hljs-type\">TapGestureRecognizer</span>()..onTap = () =&gt; {print(&#x27;点击网站&#x27;)})\n        ]),\n        textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n      ),\n    );\n  }\n}\n</code></pre>\n"}