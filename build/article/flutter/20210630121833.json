{"title":"Wigets学习之Grid","slug":"Flutter Wiget","time":"2021-06-30T12:18:49.000Z","author":"renzp94","status":"done","html":"<h2 id=\"gridview\">GridView</h2>\n<blockquote>\n<p>网格视图</p>\n</blockquote>\n<ul>\n<li><code>gridDelegate</code>：控制子级布局的委托(必填)，可以使用两个实现类：<code>SliverGridDelegateWithFixedCrossAxisCount</code>、<code>SliverGridDelegateWithMaxCrossAxisExtent</code></li>\n<li><code>children</code>：子部件列表</li>\n<li><code>scrollDirection</code>排列方向，默认为<code>Axis.vertical(横向)</code></li>\n<li><code>reverse</code>：是否反向排列，默认为<code>false</code></li>\n<li><code>padding</code>：内边距</li>\n</ul>\n<h3 id=\"slivergriddelegatewithfixedcrossaxiscount\">SliverGridDelegateWithFixedCrossAxisCount</h3>\n<blockquote>\n<p>创建一个固定列数的<code>Grid</code>布局</p>\n</blockquote>\n<ul>\n<li><code>crossAxisCount</code>：列数(必填)</li>\n<li><code>mainAxisSpacing</code>：主轴间隙，默认为 0</li>\n<li><code>crossAxisSpacing</code>：交叉轴间隙，默认为 0</li>\n<li><code>childAspectRatio</code>：子部件的主轴和交叉轴比，默认为 1</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">Widget</span>&gt; list = <span class=\"hljs-type\">List</span>.generate(\n      <span class=\"hljs-number\">8</span>,\n      (index) =&gt; <span class=\"hljs-type\">Container</span>(\n            color: <span class=\"hljs-type\">Colors</span>.blue,\n            child: <span class=\"hljs-type\">Icon</span>(\n              <span class=\"hljs-type\">Icons</span>.ac_unit,\n              color: <span class=\"hljs-type\">Colors</span>.white,\n            ),\n          ));\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n      home: <span class=\"hljs-type\">Scaffold</span>(\n        appBar: <span class=\"hljs-type\">AppBar</span>(\n          title: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;Gri</span>d&#x27;),\n        ),\n        body: <span class=\"hljs-type\">GridView</span>(\n            gridDelegate: <span class=\"hljs-type\">SliverGridDelegateWithFixedCrossAxisCount</span>(\n                crossAxisCount: <span class=\"hljs-number\">4</span>,\n                mainAxisSpacing: <span class=\"hljs-number\">12</span>,\n                crossAxisSpacing: <span class=\"hljs-number\">12</span>,\n                childAspectRatio: <span class=\"hljs-number\">1</span>),\n            padding: <span class=\"hljs-type\">EdgeInsets</span>.all(<span class=\"hljs-number\">12</span>),\n            children: list,\n            primary: <span class=\"hljs-literal\">false</span>),\n      ),\n    );\n  }\n}\n</code></pre>\n<h3 id=\"slivergriddelegatewithmaxcrossaxisextent\">SliverGridDelegateWithMaxCrossAxisExtent</h3>\n<blockquote>\n<p>创建一个根据指定子部件最大宽度的<code>Grid</code>布局</p>\n</blockquote>\n<ul>\n<li><code>maxCrossAxisExtent</code>：子部件横向大小(必填)</li>\n<li><code>mainAxisExtent</code>：子部件纵向大小，不指定则和<code>maxCrossAxisExtent</code>一样</li>\n<li><code>mainAxisSpacing</code>：主轴间隙，默认为 0</li>\n<li><code>crossAxisSpacing</code>：交叉轴间隙，默认为 0</li>\n<li><code>childAspectRatio</code>：子部件的主轴和交叉轴比，默认为 1</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">Widget</span>&gt; list = <span class=\"hljs-type\">List</span>.generate(\n      <span class=\"hljs-number\">8</span>,\n      (index) =&gt; <span class=\"hljs-type\">Container</span>(\n            color: <span class=\"hljs-type\">Colors</span>.blue,\n            child: <span class=\"hljs-type\">Icon</span>(\n              <span class=\"hljs-type\">Icons</span>.ac_unit,\n              color: <span class=\"hljs-type\">Colors</span>.white,\n            ),\n          ));\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n      home: <span class=\"hljs-type\">Scaffold</span>(\n        appBar: <span class=\"hljs-type\">AppBar</span>(\n          title: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;Gri</span>d&#x27;),\n        ),\n        body: <span class=\"hljs-type\">GridView</span>(\n            gridDelegate: <span class=\"hljs-type\">SliverGridDelegateWithMaxCrossAxisExtent</span>(\n                maxCrossAxisExtent: <span class=\"hljs-number\">80</span>,\n                mainAxisExtent: <span class=\"hljs-number\">60</span>,\n                mainAxisSpacing: <span class=\"hljs-number\">12</span>,\n                crossAxisSpacing: <span class=\"hljs-number\">12</span>,\n                childAspectRatio: <span class=\"hljs-number\">1</span>),\n            padding: <span class=\"hljs-type\">EdgeInsets</span>.all(<span class=\"hljs-number\">12</span>),\n            children: list,\n            primary: <span class=\"hljs-literal\">false</span>),\n      ),\n    );\n  }\n}\n</code></pre>\n<h3 id=\"gridviewbuilder\">GridView.builder</h3>\n<blockquote>\n<p><code>builder</code>命名构造器，适用于长列表场景，因为<code>GridView</code>部件会根据子部件是否出现在屏幕内而动态创建销毁</p>\n</blockquote>\n<ul>\n<li><code>itemBuilder</code>：子部件生成函数，<code>BuildContext context</code>：上下文，<code>int index</code>：当前子部件下标</li>\n<li><code>itemCount</code>：子部件个数，一般都需要传。</li>\n</ul>\n<p>其他属性和<code>GridView</code>一样，注意：<code>gridDelegate</code>必填</p>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">Widget</span>&gt; list = <span class=\"hljs-type\">List</span>.generate(\n      <span class=\"hljs-number\">8</span>,\n      (index) =&gt; <span class=\"hljs-type\">Container</span>(\n            color: <span class=\"hljs-type\">Colors</span>.blue,\n            child: <span class=\"hljs-type\">Icon</span>(\n              <span class=\"hljs-type\">Icons</span>.ac_unit,\n              color: <span class=\"hljs-type\">Colors</span>.white,\n            ),\n          ));\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n        home: <span class=\"hljs-type\">Scaffold</span>(\n            appBar: <span class=\"hljs-type\">AppBar</span>(\n              title: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;Gri</span>d&#x27;),\n            ),\n            body: <span class=\"hljs-type\">GridView</span>.builder(\n                padding: <span class=\"hljs-type\">EdgeInsets</span>.all(<span class=\"hljs-number\">12</span>),\n                itemCount: list.length,\n                gridDelegate: <span class=\"hljs-type\">SliverGridDelegateWithFixedCrossAxisCount</span>(\n                    mainAxisSpacing: <span class=\"hljs-number\">12</span>,\n                    crossAxisSpacing: <span class=\"hljs-number\">12</span>,\n                    crossAxisCount: <span class=\"hljs-number\">4</span>),\n                itemBuilder: (<span class=\"hljs-type\">BuildContext</span> context, int index) {\n                  <span class=\"hljs-keyword\">return</span> list[index];\n                })));\n  }\n}\n</code></pre>\n<h3 id=\"gridviewcount\">GridView.count</h3>\n<blockquote>\n<p><code>count</code>命名构造器。<code>SliverGridDelegateWithFixedCrossAxisCount</code>语法糖</p>\n</blockquote>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">Widget</span>&gt; list = <span class=\"hljs-type\">List</span>.generate(\n      <span class=\"hljs-number\">8</span>,\n      (index) =&gt; <span class=\"hljs-type\">Container</span>(\n            color: <span class=\"hljs-type\">Colors</span>.blue,\n            child: <span class=\"hljs-type\">Icon</span>(\n              <span class=\"hljs-type\">Icons</span>.ac_unit,\n              color: <span class=\"hljs-type\">Colors</span>.white,\n            ),\n          ));\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n        home: <span class=\"hljs-type\">Scaffold</span>(\n            appBar: <span class=\"hljs-type\">AppBar</span>(\n              title: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;Gri</span>d&#x27;),\n            ),\n            body: <span class=\"hljs-type\">GridView</span>.count(\n              padding: <span class=\"hljs-type\">EdgeInsets</span>.all(<span class=\"hljs-number\">12</span>),\n              crossAxisCount: <span class=\"hljs-number\">4</span>,\n              mainAxisSpacing: <span class=\"hljs-number\">12</span>,\n              crossAxisSpacing: <span class=\"hljs-number\">12</span>,\n              children: list,\n            )));\n  }\n}\n</code></pre>\n<h3 id=\"gridviewextent\">GridView.extent</h3>\n<blockquote>\n<p><code>extent</code>命名构造器。<code>SliverGridDelegateWithMaxCrossAxisExtent</code>语法糖</p>\n</blockquote>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">Widget</span>&gt; list = <span class=\"hljs-type\">List</span>.generate(\n      <span class=\"hljs-number\">8</span>,\n      (index) =&gt; <span class=\"hljs-type\">Container</span>(\n            color: <span class=\"hljs-type\">Colors</span>.blue,\n            child: <span class=\"hljs-type\">Icon</span>(\n              <span class=\"hljs-type\">Icons</span>.ac_unit,\n              color: <span class=\"hljs-type\">Colors</span>.white,\n            ),\n          ));\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n        home: <span class=\"hljs-type\">Scaffold</span>(\n            appBar: <span class=\"hljs-type\">AppBar</span>(\n              title: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;Gri</span>d&#x27;),\n            ),\n            body: <span class=\"hljs-type\">GridView</span>.extent(\n              padding: <span class=\"hljs-type\">EdgeInsets</span>.all(<span class=\"hljs-number\">12</span>),\n              maxCrossAxisExtent: <span class=\"hljs-number\">80</span>,\n              mainAxisSpacing: <span class=\"hljs-number\">12</span>,\n              crossAxisSpacing: <span class=\"hljs-number\">12</span>,\n              children: list,\n            )));\n  }\n}\n</code></pre>\n"}