{"title":"Wigets学习之Material部件","slug":"Flutter Wiget","time":"2021-06-28T19:18:38.000Z","author":"renzp94","status":"done","html":"<p>Flutter 提供了一套 Material 部件，一般 Material 应用都是以<code>MaterialApp</code>这个部件开始的。</p>\n<h2 id=\"materialapp\">MaterialApp</h2>\n<ul>\n<li><code>title</code>：标题，此标题是任务管理器中的标题</li>\n<li><code>onGenerateTitle</code>：动态设置标题，指定则使用返回的字符串，未指定则使用<code>title</code></li>\n<li><code>home</code>：应用首页</li>\n<li><code>initialRoute</code>：初始路由</li>\n<li><code>routes</code>：路由列表</li>\n<li><code>onGenerateRoute</code>：动态路由构造函数</li>\n<li><code>onGenerateInitialRoutes</code>：如果提供了<code>initialRoute</code>，则作为初始路由的路由生成构造函数</li>\n<li><code>onUnknownRoute</code>：未找到指定的路由时跳转的路由</li>\n<li><code>color</code>：应用的主色</li>\n<li><code>theme</code>：浅色主题，可用<code>Theme</code>指定</li>\n<li><code>darkTheme</code>：深色主题</li>\n<li><code>highContrastTheme</code>：高对比浅色主题</li>\n<li><code>highContrastDarkTheme</code>：高对比深色主题</li>\n<li><code>locale</code>：多语言配置</li>\n<li><code>debugShowMaterialGrid</code>：是否显示调试网格，默认为<code>false</code></li>\n<li><code>showPerformanceOverlay</code>：是否显示性能面板，默认为<code>false</code></li>\n<li><code>showSemanticsDebugger</code>：是否显示报告可访问性的覆盖，默认为<code>false</code></li>\n<li><code>debugShowCheckedModeBanner</code>：是否显示右侧顶部<code>debug</code>标签，开发环境默认为<code>true</code></li>\n<li><code>shortcuts</code>：快捷键配置</li>\n<li><code>actions</code>：行为配置</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n      title: <span class=\"hljs-string\">&quot;Material部件学习&quot;</span>,\n      home: <span class=\"hljs-type\">Home</span>(),\n    );\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Home</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Scaffold</span>(\n      appBar: <span class=\"hljs-type\">AppBar</span>(\n        title: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;Material</span>部件&#x27;),\n      ),\n    );\n  }\n}\n</code></pre>\n<h3 id=\"动态指定初始化路由\">动态指定初始化路由</h3>\n<blockquote>\n<p>一般用于未登录时显示登录页，登录则显示首页</p>\n</blockquote>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;\n\n<span class=\"hljs-built_in\">void</span> <span class=\"hljs-function\"><span class=\"hljs-title\">main</span>(<span class=\"hljs-params\"></span>)</span> {\n  runApp(App());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  final bool isLogin = <span class=\"hljs-literal\">false</span>;\n\n  <span class=\"hljs-meta\">@override</span>\n  Wid<span class=\"hljs-keyword\">get</span> <span class=\"hljs-title\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> MaterialApp(\n      title: <span class=\"hljs-string\">&#x27;动态路由学习&#x27;</span>,\n      <span class=\"hljs-attr\">initialRoute</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span>,\n      <span class=\"hljs-attr\">onGenerateInitialRoutes</span>: (<span class=\"hljs-built_in\">String</span> name) {\n        <span class=\"hljs-keyword\">return</span> [\n          MaterialPageRoute(builder: (context) {\n            <span class=\"hljs-keyword\">if</span> (isLogin) {\n              <span class=\"hljs-keyword\">return</span> Page(title: <span class=\"hljs-string\">&#x27;首页&#x27;</span>);\n            } <span class=\"hljs-keyword\">else</span> {\n              <span class=\"hljs-keyword\">return</span> Page(title: <span class=\"hljs-string\">&#x27;登录&#x27;</span>);\n            }\n          })\n        ];\n      },\n      <span class=\"hljs-attr\">routes</span>: {\n        <span class=\"hljs-string\">&#x27;/&#x27;</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">BuildContext context</span>) =&gt;</span> Page(title: <span class=\"hljs-string\">&#x27;首页&#x27;</span>),\n        <span class=\"hljs-string\">&#x27;/login&#x27;</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">BuildContext context</span>) =&gt;</span> Page(title: <span class=\"hljs-string\">&#x27;登录&#x27;</span>)\n      },\n    );\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Page</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  final <span class=\"hljs-built_in\">String</span> title;\n\n  Page({Key? key, required <span class=\"hljs-built_in\">this</span>.title}) : <span class=\"hljs-built_in\">super</span>(key: key);\n  <span class=\"hljs-meta\">@override</span>\n  Wid<span class=\"hljs-keyword\">get</span> <span class=\"hljs-title\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> Scaffold(\n      appBar: AppBar(\n        title: Text(title),\n      ),\n    );\n  }\n}\n</code></pre>\n<h2 id=\"scaffold：material风格布局\">Scaffold：<code>Material</code>风格布局</h2>\n<blockquote>\n<p><code>Scaffold</code>布局提供了一些预留位置，比如：<code>appBar</code>、<code>body</code>、<code>floatingActionButton</code>、<code>bottomNavigationBar</code>等</p>\n</blockquote>\n<ul>\n<li><code>appBar</code>：顶部应用程序栏，通过<code>AppBar</code>指定</li>\n<li><code>body</code>：主体</li>\n<li><code>backgroundColor</code>：背景色</li>\n<li><code>floatingActionButton</code>：右底部悬停按钮</li>\n<li><code>drawer</code>：左侧抽屉，如果指定了，则在<code>appBar</code>左侧会出现一个菜单图标，点击之后可以在左侧打开抽屉</li>\n<li><code>onDrawerChanged</code>：抽屉显示改变事件，接受一个<code>bool</code>类型的参数，抽屉是否打开</li>\n<li><code>endDrawer</code>：右侧抽屉，如果指定了，则在<code>appBar</code>右侧会出现一个菜单图标，点击之后可以在右侧打开抽屉</li>\n<li><code>drawerScrimColor</code>：抽屉的遮罩颜色</li>\n<li><code>drawerEdgeDragWidth</code>：抽屉打开的默认宽度</li>\n<li><code>bottomNavigationBar</code>：底部<code>tabbar</code>，通过<code>BottomNavigationBar</code>指定</li>\n<li><code>persistentFooterButtons</code>：底部按钮组，在<code>bottomNavigationBar</code>上方显示</li>\n<li><code>bottomSheet</code>：底部区域，在<code>persistentFooterButtons</code>上方显示</li>\n<li><code>resizeToAvoidBottomInset</code>：<code>body</code>和浮动小部件自动调整大小，避免键盘弹起遮挡，默认为<code>true</code></li>\n<li><code>primary</code>：是否使用屏幕状态栏高度，如果为<code>true</code>则<code>appBar</code>的高度会扩展屏幕状态栏的高度，默认为<code>true</code></li>\n<li><code>drawerDragStartBehavior</code>：设置抽屉拖动行为，<code>DragStartBehavior.start</code>: 检测拖动手势开始，<code>DragStartBehavior.end</code>：检测首次<code>down</code>事件开始，默认为<code>DragStartBehavior.start</code></li>\n<li><code>extendBody</code>：是否扩展<code>body</code>，如果为<code>true</code>，则<code>body</code>则会充满除<code>appBar</code>和<code>bottomNavigationBar</code>区域，默认为<code>false</code></li>\n<li><code>drawerEnableOpenDragGesture</code>：是否可手势拖动打开左侧抽屉，默认为<code>true</code></li>\n<li><code>endDrawerEnableOpenDragGesture</code>：是否可手势拖动打开右侧侧抽屉，默认为<code>true</code></li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-string\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/gestures.dart&#x27;</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span><span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">void</span> <span class=\"hljs-string\">main()</span> {\n  <span class=\"hljs-string\">runApp(App());</span>\n}\n\n<span class=\"hljs-string\">class</span> <span class=\"hljs-string\">App</span> <span class=\"hljs-string\">extends</span> <span class=\"hljs-string\">StatelessWidget</span> {\n  <span class=\"hljs-string\">@override</span>\n  <span class=\"hljs-string\">Widget</span> <span class=\"hljs-string\">build(BuildContext</span> <span class=\"hljs-string\">context)</span> {\n    <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">MaterialApp(</span>\n      <span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">&quot;Material部件学习&quot;</span>,\n      <span class=\"hljs-attr\">home:</span> <span class=\"hljs-string\">Home()</span>,\n      <span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">ThemeData(</span>\n          <span class=\"hljs-attr\">primaryColor:</span> <span class=\"hljs-string\">Colors.yellow</span>,\n          <span class=\"hljs-attr\">floatingActionButtonTheme:</span> <span class=\"hljs-string\">FloatingActionButtonThemeData(</span>\n              <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Colors.yellow</span>, <span class=\"hljs-attr\">foregroundColor:</span> <span class=\"hljs-string\">Colors.black))</span>,\n    <span class=\"hljs-string\">);</span>\n  }\n}\n\n<span class=\"hljs-string\">class</span> <span class=\"hljs-string\">Home</span> <span class=\"hljs-string\">extends</span> <span class=\"hljs-string\">StatelessWidget</span> {\n  <span class=\"hljs-string\">@override</span>\n  <span class=\"hljs-string\">Widget</span> <span class=\"hljs-string\">build(BuildContext</span> <span class=\"hljs-string\">context)</span> {\n    <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">Scaffold(</span>\n        <span class=\"hljs-attr\">appBar:</span> <span class=\"hljs-string\">AppBar(</span>\n          <span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">Text(&#x27;Material部件&#x27;)</span>,\n        <span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">body:</span> <span class=\"hljs-string\">Container(</span>\n          <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">Colors.blue</span>,\n        <span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">floatingActionButton:</span> <span class=\"hljs-string\">FloatingActionButton(</span>\n          <span class=\"hljs-attr\">onPressed:</span> <span class=\"hljs-string\">()</span> {},\n          <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Icon(Icons.add)</span>,\n        <span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">drawer:</span> <span class=\"hljs-string\">Container(</span>\n          <span class=\"hljs-attr\">width:</span> <span class=\"hljs-number\">300</span>,\n          <span class=\"hljs-attr\">height:</span> <span class=\"hljs-string\">double.infinity</span>,\n          <span class=\"hljs-attr\">padding:</span> <span class=\"hljs-string\">EdgeInsets.all(24)</span>,\n          <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">Colors.white</span>,\n          <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Text(&#x27;这是一个左侧抽屉&#x27;)</span>,\n        <span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">onDrawerChanged:</span> <span class=\"hljs-string\">(bool</span> <span class=\"hljs-string\">isOpened)</span> {\n          <span class=\"hljs-string\">print(&#x27;左侧抽屉：</span> <span class=\"hljs-string\">$isOpened&#x27;);</span>\n        },\n        <span class=\"hljs-attr\">endDrawer:</span> <span class=\"hljs-string\">Container(</span>\n          <span class=\"hljs-attr\">width:</span> <span class=\"hljs-number\">300</span>,\n          <span class=\"hljs-attr\">height:</span> <span class=\"hljs-string\">double.infinity</span>,\n          <span class=\"hljs-attr\">padding:</span> <span class=\"hljs-string\">EdgeInsets.all(24)</span>,\n          <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">Colors.white</span>,\n          <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Text(&#x27;这是一个右侧抽屉&#x27;)</span>,\n        <span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">onEndDrawerChanged:</span> <span class=\"hljs-string\">(bool</span> <span class=\"hljs-string\">isOpened)</span> {\n          <span class=\"hljs-string\">print(&#x27;右侧抽屉：</span> <span class=\"hljs-string\">$isOpened&#x27;);</span>\n        },\n        <span class=\"hljs-attr\">bottomSheet:</span> <span class=\"hljs-string\">Container(</span>\n          <span class=\"hljs-attr\">width:</span> <span class=\"hljs-string\">double.infinity</span>,\n          <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Text(&#x27;这是bottomSheet区域&#x27;)</span>,\n        <span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">persistentFooterButtons:</span> [\n          <span class=\"hljs-string\">OutlinedButton(onPressed:</span> <span class=\"hljs-literal\">null</span>, <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Text(&#x27;按钮1&#x27;))</span>,\n          <span class=\"hljs-string\">OutlinedButton(onPressed:</span> <span class=\"hljs-literal\">null</span>, <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Text(&#x27;按钮2&#x27;))</span>,\n          <span class=\"hljs-string\">OutlinedButton(onPressed:</span> <span class=\"hljs-literal\">null</span>, <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Text(&#x27;按钮3&#x27;))</span>,\n          <span class=\"hljs-string\">OutlinedButton(onPressed:</span> <span class=\"hljs-literal\">null</span>, <span class=\"hljs-attr\">child:</span> <span class=\"hljs-string\">Text(&#x27;按钮4&#x27;))</span>,\n        ],\n        <span class=\"hljs-attr\">bottomNavigationBar:</span> <span class=\"hljs-string\">BottomNavigationBar(</span>\n          <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">BottomNavigationBarType.fixed</span>,\n          <span class=\"hljs-attr\">items:</span> [\n            <span class=\"hljs-string\">BottomNavigationBarItem(icon:</span> <span class=\"hljs-string\">Icon(Icons.home)</span>, <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">&quot;首页&quot;</span><span class=\"hljs-string\">)</span>,\n            <span class=\"hljs-string\">BottomNavigationBarItem(icon:</span> <span class=\"hljs-string\">Icon(Icons.camera)</span>, <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">&quot;圈子&quot;</span><span class=\"hljs-string\">)</span>,\n            <span class=\"hljs-string\">BottomNavigationBarItem(icon:</span> <span class=\"hljs-string\">Icon(Icons.weekend)</span>, <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">&quot;生活&quot;</span><span class=\"hljs-string\">)</span>,\n            <span class=\"hljs-string\">BottomNavigationBarItem(</span>\n                <span class=\"hljs-attr\">icon:</span> <span class=\"hljs-string\">Icon(Icons.shopping_bag)</span>, <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">&quot;返利优惠&quot;</span><span class=\"hljs-string\">)</span>,\n            <span class=\"hljs-string\">BottomNavigationBarItem(icon:</span> <span class=\"hljs-string\">Icon(Icons.person)</span>, <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">&quot;我的&quot;</span><span class=\"hljs-string\">)</span>\n          ],\n        <span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Colors.blue.shade50</span>,\n        <span class=\"hljs-attr\">drawerEdgeDragWidth:</span> <span class=\"hljs-number\">20</span><span class=\"hljs-string\">);</span>\n  }\n}\n</code></pre>\n<h3 id=\"appbar\">AppBar</h3>\n<ul>\n<li><code>leading</code>：应用程序栏左侧图标</li>\n<li><code>leadingWidth</code>：左侧宽度</li>\n<li><code>automaticallyImplyLeading</code>：是否尝试自动展示 leading 部件，如果<code>leading</code>没有指定，则此参数生效，为<code>true</code>时，如果指定了<code>Scaffold</code>的<code>drawer</code>则会<code>leading</code>会自动展示为一个菜单按钮，为<code>false</code>则不展示<code>leading</code>，除非指定<code>leading</code></li>\n<li><code>title</code>：标题</li>\n<li><code>centerTitle</code>：标题是否居中，默认为<code>false</code></li>\n<li><code>titleSpacing</code>：标题左右间距</li>\n<li><code>titleTextStyle</code>：标题样式</li>\n<li><code>actions</code>：右侧操作列表</li>\n<li><code>flexibleSpace</code>：绝对定位在屏幕状态栏和应用程序栏上，高度和应用程序栏高度相同</li>\n<li><code>bottom</code>：位于应用程序栏下的位置，一般用于放置<code>tabBar</code></li>\n<li><code>elevation</code>：阴影</li>\n<li><code>shadowColor</code>：阴影颜色</li>\n<li><code>backgroundColor</code>：背景色</li>\n<li><code>foregroundColor</code>文本和图标默认颜色</li>\n<li><code>iconTheme</code>：图标主题</li>\n<li><code>actionsIconTheme</code>：操作列表图标主题</li>\n<li><code>textTheme</code>：文本主题</li>\n<li><code>primary</code>：与<code>Scaffold</code>的<code>primary</code>一致</li>\n<li><code>toolbarOpacity</code>：应用程序栏透明度，默认为 1</li>\n<li><code>bottomOpacity</code>：<code>bottom</code>透明度，默认为 1</li>\n<li><code>toolbarHeight</code>：应用程序栏高度</li>\n<li><code>toolbarTextStyle</code>：应用程序栏文本样式</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n      title: <span class=\"hljs-string\">&quot;Material部件学习&quot;</span>,\n      home: <span class=\"hljs-type\">Home</span>(),\n      theme: <span class=\"hljs-type\">ThemeData</span>(\n          primaryColor: <span class=\"hljs-type\">Colors</span>.yellow,\n          floatingActionButtonTheme: <span class=\"hljs-type\">FloatingActionButtonThemeData</span>(\n              backgroundColor: <span class=\"hljs-type\">Colors</span>.yellow, foregroundColor: <span class=\"hljs-type\">Colors</span>.black)),\n    );\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Home</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Scaffold</span>(\n      appBar: <span class=\"hljs-type\">AppBar</span>(\n        automaticallyImplyLeading: <span class=\"hljs-literal\">false</span>,\n        title: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;Material</span>部件&#x27;),\n        titleSpacing: <span class=\"hljs-number\">0</span>,\n        actions: [\n          <span class=\"hljs-type\">IconButton</span>(icon: <span class=\"hljs-type\">Icon</span>(<span class=\"hljs-type\">Icons</span>.search), onPressed: () {}),\n          <span class=\"hljs-type\">IconButton</span>(icon: <span class=\"hljs-type\">Icon</span>(<span class=\"hljs-type\">Icons</span>.menu), onPressed: () {})\n        ],\n        bottom: <span class=\"hljs-type\">PreferredSize</span>(\n          child: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;botto</span>m&#x27;),\n          preferredSize: <span class=\"hljs-type\">Size</span>(<span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">30</span>),\n        ),\n      ),\n      drawer: <span class=\"hljs-type\">Container</span>(\n        color: <span class=\"hljs-type\">Colors</span>.white,\n        height: double.infinity,\n        width: <span class=\"hljs-number\">300</span>,\n        child: <span class=\"hljs-type\">Text</span>(<span class=\"hljs-symbol\">&#x27;asds</span>d&#x27;),\n      ),\n    );\n  }\n}\n</code></pre>\n<h3 id=\"bottomnavigationbar\">BottomNavigationBar</h3>\n<ul>\n<li><code>items</code>：列表项(必填且 length&gt;=2)</li>\n<li><code>onTap</code>：点击事件</li>\n<li><code>currentIndex</code>：当前激活项的索引，默认为 0</li>\n<li><code>elevation</code>：阴影</li>\n<li><code>type</code>：布局类型，默认为：<code>BottomNavigationBarType.shifting</code>(排列不开就隐藏)，一般当超过三个之后需要将<code>type</code>指定为<code>BottomNavigationBarType.fixed</code></li>\n<li><code>fixedColor</code>：当前激活项颜色，与<code>selectedItemColor</code>不能同时存在</li>\n<li><code>backgroundColor</code>：背景色</li>\n<li><code>iconSize</code>：图标大小，默认为 24</li>\n<li><code>selectedItemColor</code>：选中选项的颜色，与<code>fixedColor</code>不能同时存在</li>\n<li><code>unselectedItemColor</code>：未选中选项的颜色</li>\n<li><code>selectedIconTheme</code>：选中选项的图标主题</li>\n<li><code>unselectedIconTheme</code>：未选中选项的图标主题</li>\n<li><code>selectedFontSize</code>：选中选项文字大小，默认为 14</li>\n<li><code>unselectedFontSize</code>：未选中选项文字大小，默认为 12</li>\n<li><code>selectedLabelStyle</code>：选中项<code>label</code>样式</li>\n<li><code>unselectedLabelStyle</code>：未选中项<code>label</code>样式</li>\n<li><code>showSelectedLabels</code>：是否显示选中选项的<code>label</code></li>\n<li><code>showUnselectedLabels</code>：是否显示未选中选项的<code>label</code></li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">MaterialApp</span>(\n      title: <span class=\"hljs-string\">&quot;Material部件学习&quot;</span>,\n      home: <span class=\"hljs-type\">Home</span>(),\n      theme: <span class=\"hljs-type\">ThemeData</span>(\n          primaryColor: <span class=\"hljs-type\">Colors</span>.yellow,\n          floatingActionButtonTheme: <span class=\"hljs-type\">FloatingActionButtonThemeData</span>(\n              backgroundColor: <span class=\"hljs-type\">Colors</span>.yellow, foregroundColor: <span class=\"hljs-type\">Colors</span>.black)),\n    );\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Home</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatefulWidget</span> </span>{\n  <span class=\"hljs-type\">Home</span>({<span class=\"hljs-type\">Key</span>? key}) : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  _HomeState createState() =&gt; _HomeState();\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">_HomeState</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">State&lt;Home&gt;</span> </span>{\n  int _index = <span class=\"hljs-number\">0</span>;\n\n  static <span class=\"hljs-type\">List</span>&lt;<span class=\"hljs-type\">IconData</span>&gt; icons = [\n    <span class=\"hljs-type\">Icons</span>.home,\n    <span class=\"hljs-type\">Icons</span>.camera,\n    <span class=\"hljs-type\">Icons</span>.shopping_bag,\n    <span class=\"hljs-type\">Icons</span>.person\n  ];\n\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Scaffold</span>(\n      body: <span class=\"hljs-type\">Center</span>(\n        child: <span class=\"hljs-type\">Icon</span>(\n          icons[_index],\n          size: <span class=\"hljs-number\">60</span>,\n        ),\n      ),\n      bottomNavigationBar: <span class=\"hljs-type\">BottomNavigationBar</span>(\n        items: [\n          <span class=\"hljs-type\">BottomNavigationBarItem</span>(icon: <span class=\"hljs-type\">Icon</span>(<span class=\"hljs-type\">Icons</span>.home), label: <span class=\"hljs-string\">&quot;首页&quot;</span>),\n          <span class=\"hljs-type\">BottomNavigationBarItem</span>(icon: <span class=\"hljs-type\">Icon</span>(<span class=\"hljs-type\">Icons</span>.camera), label: <span class=\"hljs-string\">&quot;动态&quot;</span>),\n          <span class=\"hljs-type\">BottomNavigationBarItem</span>(icon: <span class=\"hljs-type\">Icon</span>(<span class=\"hljs-type\">Icons</span>.shopping_bag), label: <span class=\"hljs-string\">&quot;购物车&quot;</span>),\n          <span class=\"hljs-type\">BottomNavigationBarItem</span>(icon: <span class=\"hljs-type\">Icon</span>(<span class=\"hljs-type\">Icons</span>.person), label: <span class=\"hljs-string\">&quot;我的&quot;</span>),\n        ],\n        currentIndex: _index,\n        onTap: (index) {\n          setState(() {\n            _index = index;\n          });\n        },\n        <span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span></span>: <span class=\"hljs-type\">BottomNavigationBarType</span>.fixed,\n      ),\n    );\n  }\n}\n</code></pre>\n"}