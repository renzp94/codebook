{"title":"Wigets学习之Icon","slug":"Flutter Wiget","time":"2021-06-25T08:48:31.000Z","author":"renzp94","status":"done","html":"<h2 id=\"icon\">Icon</h2>\n<blockquote>\n<p>图标部件，用于显示图标</p>\n</blockquote>\n<ul>\n<li><code>icon</code>: 图标(必填)，可以使用<code>Icons</code>指定值</li>\n<li><code>size</code>：图标大小</li>\n<li><code>color</code>：图标颜色</li>\n<li><code>semanticLabel</code>：语义化</li>\n<li><code>textDirection</code>：文本排列方式</li>\n</ul>\n<blockquote>\n<p>注意：如果要使用默认的<code>Material</code>图标，需要在<code>pubspec.yaml</code>文件中设置如下：</p>\n</blockquote>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">flutter:</span>\n  <span class=\"hljs-attr\">uses-material-design:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Row</span>(\n      textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n      mainAxisAlignment: <span class=\"hljs-type\">MainAxisAlignment</span>.spaceAround,\n      children: [\n        <span class=\"hljs-type\">Icon</span>(\n          <span class=\"hljs-type\">Icons</span>.ac_unit,\n          textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          color: <span class=\"hljs-type\">Colors</span>.white,\n          size: <span class=\"hljs-number\">30</span>,\n        ),\n        <span class=\"hljs-type\">Icon</span>(\n          <span class=\"hljs-type\">Icons</span>.access_alarm_outlined,\n          textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          color: <span class=\"hljs-type\">Colors</span>.blue,\n          size: <span class=\"hljs-number\">30</span>,\n        ),\n        <span class=\"hljs-type\">Icon</span>(\n          <span class=\"hljs-type\">Icons</span>.cake_outlined,\n          textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          color: <span class=\"hljs-type\">Colors</span>.orange,\n          size: <span class=\"hljs-number\">30</span>,\n        ),\n      ],\n    );\n  }\n}\n</code></pre>\n<h2 id=\"使用自定义图标\">使用自定义图标</h2>\n<p>要想使用自定义图标的话可以使用<code>IconData</code>来指定，下面使用<code>iconfont</code>来举例。</p>\n<h3 id=\"配置图标字体资源\">配置图标字体资源</h3>\n<p>在<code>iconfont</code>官网将图标资源下载下来只复制<code>iconfont.ttf</code>文件到项目目录中如：<code>lib/assets/fonts/iconfont.ttf</code>。\n<br />\n然后在<code>pubspec.yaml</code>文件中引入资源</p>\n<pre><code class=\"language-diff\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">learn</span>\n<span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">A</span> <span class=\"hljs-string\">new</span> <span class=\"hljs-string\">Flutter</span> <span class=\"hljs-string\">project.</span>\n<span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-string\">+1</span>\n<span class=\"hljs-attr\">environment:</span>\n  <span class=\"hljs-attr\">sdk:</span> <span class=\"hljs-string\">&#x27;&gt;=2.12.0 &lt;3.0.0&#x27;</span>\n\n<span class=\"hljs-attr\">dependencies:</span>\n  <span class=\"hljs-attr\">flutter:</span>\n    <span class=\"hljs-attr\">sdk:</span> <span class=\"hljs-string\">flutter</span>\n  <span class=\"hljs-attr\">cupertino_icons:</span> <span class=\"hljs-string\">^1.0.2</span>\n\n<span class=\"hljs-attr\">dev_dependencies:</span>\n  <span class=\"hljs-attr\">flutter_test:</span>\n    <span class=\"hljs-attr\">sdk:</span> <span class=\"hljs-string\">flutter</span>\n\n<span class=\"hljs-attr\">flutter:</span>\n  <span class=\"hljs-attr\">uses-material-design:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-string\">+</span>  <span class=\"hljs-attr\">fonts:</span>\n<span class=\"hljs-string\">+</span>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">family:</span> <span class=\"hljs-string\">iconFont</span>\n<span class=\"hljs-string\">+</span>      <span class=\"hljs-attr\">fonts:</span>\n<span class=\"hljs-string\">+</span>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">asset:</span> <span class=\"hljs-string\">lib/assets/fonts/iconfont.ttf</span>\n</code></pre>\n<p><code>fonts</code>配置项：</p>\n<ul>\n<li><code>family</code>：指定 fontFamily，可以用在需要指定<code>fontFamily</code>参数的位置</li>\n<li><code>fonts</code>：指定资源位置</li>\n<li><code>weight</code>：指定字体粗细，取值范围：100~900</li>\n<li><code>style</code>：指定斜体(<code>italic</code>)还是正常(<code>normal</code>)</li>\n</ul>\n<blockquote>\n<p>注意：你可能在其他地方看到过，如果资源放在<code>lib</code>下则不需要再加上<code>lib/</code>，但是我实际测试如果不加则会报错找不到资源：<code>Error: unable to locate asset entry in pubspec.yaml: &quot;assets/fonts/iconfont.ttf&quot;. </code>。</p>\n</blockquote>\n<h3 id=\"使用图标\">使用图标</h3>\n<p>在<code>iconfont</code>官网上找到图标的<code>Unicode</code>编码并将<code>&amp;#</code>换成<code>0</code>使用，如：<code>&amp;#xe608</code>→<code>0xe608</code>，然后使用<code>IconData</code>。</p>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Row</span>(\n      textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n      mainAxisAlignment: <span class=\"hljs-type\">MainAxisAlignment</span>.spaceAround,\n      children: [\n        <span class=\"hljs-type\">Icon</span>(\n          <span class=\"hljs-type\">IconData</span>(<span class=\"hljs-number\">0xe608</span>, fontFamily: <span class=\"hljs-symbol\">&#x27;iconFon</span>t&#x27;),\n          textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          color: <span class=\"hljs-type\">Colors</span>.white,\n          size: <span class=\"hljs-number\">30</span>,\n        ),\n        <span class=\"hljs-type\">Icon</span>(\n          <span class=\"hljs-type\">IconData</span>(<span class=\"hljs-number\">0xea0a</span>, fontFamily: <span class=\"hljs-symbol\">&#x27;iconFon</span>t&#x27;),\n          textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          color: <span class=\"hljs-type\">Colors</span>.white,\n          size: <span class=\"hljs-number\">30</span>,\n        ),\n        <span class=\"hljs-type\">Icon</span>(\n          <span class=\"hljs-type\">IconData</span>(<span class=\"hljs-number\">0xe640</span>, fontFamily: <span class=\"hljs-symbol\">&#x27;iconFon</span>t&#x27;),\n          textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          color: <span class=\"hljs-type\">Colors</span>.white,\n          size: <span class=\"hljs-number\">30</span>,\n        ),\n      ],\n    );\n  }\n}\n</code></pre>\n"}