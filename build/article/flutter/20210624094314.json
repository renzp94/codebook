{"title":"Wigets学习之Container","slug":"Flutter Wiget","time":"2021-06-24T09:43:37.000Z","author":"renzp94","status":"done","html":"<h2 id=\"container-→-divhtml\">Container → div(HTML)</h2>\n<blockquote>\n<p>一个设置基本样式大小的容器部件</p>\n</blockquote>\n<ul>\n<li><code>child</code>：子部件</li>\n<li><code>height</code>: 高度</li>\n<li><code>width</code>：宽度</li>\n<li><code>padding</code>: 内边距</li>\n<li><code>margin</code>：外边距</li>\n<li><code>color</code>：背景色</li>\n<li><code>transform</code>：容器变换，类似于<code>Css</code>中的<code>transform</code></li>\n<li><code>transformAlignment</code>：变换的对齐方式</li>\n<li><code>decoration</code>：装饰容器，指定此参数则不能指定<code>color</code>参数，是一个<code>BoxDecoration</code>类型</li>\n<li><code>alignment</code>：容器中的子部件对齐方式，指定此参数则必须指定<code>decoration</code>参数</li>\n<li><code>constraints</code>: 创建一个装饰部件，指定此参数则不能指定<code>color</code>和<code>decoration</code>参数</li>\n</ul>\n<blockquote>\n<p>注意：Container 如果设置宽高无效的话，是因为 Container 计算宽高时需要考虑到父部件的尺寸约束(<code>BoxConstraints</code>)<code>，BoxConstraints</code>有四个参数: <code>minWidth</code>、<code>maxWidth</code>、<code>minHeight</code>、<code>maxHeight</code>。当宽高不在<code>constraints</code>范围内时则会强制计算符合<code>constraints</code>要求的值，而不再使用设置的宽高。可以使用 <code>Row</code>或<code>Column</code>部件包裹。</p>\n</blockquote>\n<h3 id=\"boxdecoration\">BoxDecoration</h3>\n<ul>\n<li><code>color</code>：背景色</li>\n<li><code>image</code>: 背景图</li>\n<li><code>border</code>: 边框</li>\n<li><code>borderRadius</code>：圆角</li>\n<li><code>gradient</code>：渐变背景</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Center</span>(\n      child: <span class=\"hljs-type\">Container</span>(\n        height: <span class=\"hljs-number\">400</span>,\n        width: <span class=\"hljs-number\">400</span>,\n        padding: <span class=\"hljs-type\">EdgeInsets</span>.only(top: <span class=\"hljs-number\">40</span>, left: <span class=\"hljs-number\">20</span>),\n        decoration: <span class=\"hljs-type\">BoxDecoration</span>(\n            borderRadius: <span class=\"hljs-type\">BorderRadius</span>.all(<span class=\"hljs-type\">Radius</span>.circular(<span class=\"hljs-number\">50</span>)),\n            image: <span class=\"hljs-type\">DecorationImage</span>(\n                image: <span class=\"hljs-type\">NetworkImage</span>(\n                    <span class=\"hljs-symbol\">&#x27;https</span>:<span class=\"hljs-comment\">//img2.baidu.com/it/u=2969910583,3071772098&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#x27;)),</span>\n            color: <span class=\"hljs-type\">Colors</span>.yellow,\n            gradient: <span class=\"hljs-type\">LinearGradient</span>(colors: [<span class=\"hljs-type\">Colors</span>.red.shade400, <span class=\"hljs-type\">Colors</span>.blue]),\n            border: <span class=\"hljs-type\">Border</span>.all(width: <span class=\"hljs-number\">2</span>, color: <span class=\"hljs-type\">Colors</span>.white),\n            boxShadow: [<span class=\"hljs-type\">BoxShadow</span>(color: <span class=\"hljs-type\">Colors</span>.green, blurRadius: <span class=\"hljs-number\">50</span>)]),\n        child: <span class=\"hljs-type\">Text</span>(\n          <span class=\"hljs-symbol\">&#x27;Hello</span> <span class=\"hljs-type\">Fluter</span>&#x27;,\n          textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n        ),\n      ),\n    );\n  }\n}\n</code></pre>\n<h2 id=\"center\">Center</h2>\n<blockquote>\n<p>使子部件居中对齐</p>\n</blockquote>\n<ul>\n<li><code>child</code>：子部件</li>\n<li><code>widthFactor</code>：宽度因子，不设置则子部件为默认大小</li>\n<li><code>heightFactor</code>：高度度因子，不设置则子部件为默认大小</li>\n</ul>\n<pre><code class=\"language-dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-symbol\">&#x27;package</span>:flutter/material.dart&#x27;;\n\nvoid main() {\n  runApp(<span class=\"hljs-type\">App</span>());\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-meta\">@override</span>\n  <span class=\"hljs-type\">Widget</span> build(<span class=\"hljs-type\">BuildContext</span> context) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Row</span>(\n      textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n      children: [\n        <span class=\"hljs-type\">Center</span>(\n          widthFactor: <span class=\"hljs-number\">2</span>,\n          child: <span class=\"hljs-type\">Container</span>(\n            color: <span class=\"hljs-type\">Colors</span>.cyan,\n            child: <span class=\"hljs-type\">Text</span>(\n              <span class=\"hljs-symbol\">&#x27;Hello</span> <span class=\"hljs-type\">Flutter</span>&#x27;,\n              textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n            ),\n          ),\n        ),\n        <span class=\"hljs-type\">Center</span>(\n          child: <span class=\"hljs-type\">Text</span>(\n            <span class=\"hljs-symbol\">&#x27;Hello</span> <span class=\"hljs-type\">Flutter</span>&#x27;,\n            textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          ),\n        ),\n        <span class=\"hljs-type\">Center</span>(\n          child: <span class=\"hljs-type\">Text</span>(\n            <span class=\"hljs-symbol\">&#x27;Hello</span> <span class=\"hljs-type\">Flutter</span>&#x27;,\n            textDirection: <span class=\"hljs-type\">TextDirection</span>.ltr,\n          ),\n        ),\n      ],\n    );\n  }\n}\n</code></pre>\n"}